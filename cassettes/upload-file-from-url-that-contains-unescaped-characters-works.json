[
  {
    "scope": "https://www.ilcaminettodisaliceterme.it:443",
    "method": "GET",
    "path": "/wp-content/uploads/2019/01/men%C3%B9-estivo.png",
    "body": "",
    "status": 200,
    "response": "",
    "rawHeaders": [
      "Date",
      "Fri, 20 Mar 2020 10:51:49 GMT",
      "Server",
      "Apache",
      "Last-Modified",
      "Fri, 18 Jan 2019 15:45:53 GMT",
      "Accept-Ranges",
      "bytes",
      "Content-Length",
      "6014",
      "Cache-Control",
      "max-age=10368000",
      "Expires",
      "max-age=A10368000, public",
      "Connection",
      "keep-alive, close",
      "Content-Type",
      "image/png"
    ],
    "responseIsBinary": true
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "GET",
    "path": "/docs/site-api-hyperschema.json",
    "body": "",
    "status": 200,
    "response": {
      "$schema": "http://interagent.github.io/interagent-hyper-schema",
      "title": "DatoCMS Site API",
      "description": "",
      "type": "object",
      "id": "dato-api",
      "links": [
        {
          "href": "https://site-api.datocms.com",
          "rel": "self"
        }
      ],
      "properties": {
        "session": {
          "$ref": "#/definitions/session"
        },
        "account": {
          "$ref": "#/definitions/account"
        },
        "user": {
          "$ref": "#/definitions/user"
        },
        "access_token": {
          "$ref": "#/definitions/access_token"
        },
        "plugin": {
          "$ref": "#/definitions/plugin"
        },
        "site": {
          "$ref": "#/definitions/site"
        },
        "menu_item": {
          "$ref": "#/definitions/menu_item"
        },
        "job_result": {
          "$ref": "#/definitions/job_result"
        },
        "plan": {
          "$ref": "#/definitions/plan"
        },
        "subscription_compatibility": {
          "$ref": "#/definitions/subscription_compatibility"
        },
        "deploy_event": {
          "$ref": "#/definitions/deploy_event"
        },
        "item_type": {
          "$ref": "#/definitions/item_type"
        },
        "field": {
          "$ref": "#/definitions/field"
        },
        "item": {
          "$ref": "#/definitions/item"
        },
        "item_version": {
          "$ref": "#/definitions/item_version"
        },
        "upload": {
          "$ref": "#/definitions/upload"
        },
        "upload_request": {
          "$ref": "#/definitions/upload_request"
        },
        "scheduled_publication": {
          "$ref": "#/definitions/scheduled_publication"
        },
        "search_result": {
          "$ref": "#/definitions/search_result"
        },
        "role": {
          "$ref": "#/definitions/role"
        },
        "webhook": {
          "$ref": "#/definitions/webhook"
        },
        "webhook_call": {
          "$ref": "#/definitions/webhook_call"
        },
        "deployment_environment": {
          "$ref": "#/definitions/deployment_environment"
        },
        "item_type_filter": {
          "$ref": "#/definitions/item_type_filter"
        },
        "upload_filter": {
          "$ref": "#/definitions/upload_filter"
        },
        "site_invitation": {
          "$ref": "#/definitions/site_invitation"
        },
        "editing_session": {
          "$ref": "#/definitions/editing_session"
        },
        "sso_user": {
          "$ref": "#/definitions/sso_user"
        },
        "sso_group": {
          "$ref": "#/definitions/sso_group"
        },
        "sso_setting": {
          "$ref": "#/definitions/sso_settings"
        },
        "upload_tag": {
          "$ref": "#/definitions/upload_tag"
        },
        "upload_smart_tag": {
          "$ref": "#/definitions/upload_smart_tag"
        }
      },
      "definitions": {
        "upload_request": {
          "position": 8,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Request a new upload",
              "description": "",
              "href": "/upload-requests",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/upload_request/properties/type"
                      },
                      "attributes": {
                        "type": "object",
                        "description": "JSON API attributes",
                        "properties": {
                          "filename": {
                            "type": "string",
                            "description": "The original file name",
                            "example": "image.png"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload_request"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Upload permission",
          "description": "To upload a file in DatoCMS, first you need to obtain an upload permission through this API endpoint. The response will contain the S3 URL where you will be able to upload the file with a direct PUT request.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "identity": {
              "$ref": "#/definitions/upload_request/definitions/id"
            },
            "type": {
              "type": [
                "string"
              ],
              "description": "JSON API type field",
              "pattern": "^upload_request$",
              "example": "upload_request"
            },
            "id": {
              "type": "string",
              "description": "The S3 path where the file will be stored",
              "example": "/7/1455102967-image.png"
            },
            "attributes": {
              "type": "object",
              "description": "JSON API attributes",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "The URL to use to upload the file with a direct PUT request",
                  "example": "https://dato-images.s3-eu-west-1.amazonaws.com/7/1455102967-image.png?X-Amz-Credential=AKIAJDTXTZHHDUCKAUMA%2F20160210"
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/upload_request/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/upload_request/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/upload_request/definitions/attributes"
            }
          }
        },
        "item": {
          "position": 2,
          "links": [
            {
              "method": "POST",
              "rel": "validate_existing",
              "private": true,
              "title": "Validates an existing record field",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/validate",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "id",
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "$ref": "#/definitions/item/properties/id"
                      },
                      "type": {
                        "$ref": "#/definitions/item/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/item/definitions/attributes"
                      },
                      "meta": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object",
                        "required": [
                          "item_type"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "item_type": {
                            "type": "object",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "$ref": "#/definitions/item_type/definitions/data"
                              }
                            }
                          },
                          "creator": {
                            "type": "object",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "anyOf": [
                                  {
                                    "$ref": "#/definitions/account/definitions/data"
                                  },
                                  {
                                    "$ref": "#/definitions/access_token/definitions/data"
                                  },
                                  {
                                    "$ref": "#/definitions/user/definitions/data"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "validate_new",
              "private": true,
              "title": "Validates a record field",
              "description": "",
              "href": "/items/validate",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/item/definitions/attributes"
                      },
                      "meta": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object",
                        "required": [
                          "item_type"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "item_type": {
                            "type": "object",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "$ref": "#/definitions/item_type/definitions/data"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new record",
              "description": "",
              "href": "/items",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/item/definitions/attributes"
                      },
                      "meta": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object",
                        "required": [
                          "item_type"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "item_type": {
                            "type": "object",
                            "description": "The record model",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "$ref": "#/definitions/item_type/definitions/data"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/item_type"
                        },
                        {
                          "$ref": "#/definitions/item"
                        }
                      ]
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "duplicate",
              "title": "Duplicate a record",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/duplicate",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a record",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "meta": {
                      "type": "object"
                    },
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/item/properties/id"
                      },
                      "attributes": {
                        "$ref": "#/definitions/item/properties/attributes"
                      },
                      "meta": {
                        "$ref": "#/definitions/item/properties/meta"
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "creator": {
                            "type": "object",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "anyOf": [
                                  {
                                    "$ref": "#/definitions/account/definitions/data"
                                  },
                                  {
                                    "$ref": "#/definitions/access_token/definitions/data"
                                  },
                                  {
                                    "$ref": "#/definitions/user/definitions/data"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/item_type"
                        },
                        {
                          "$ref": "#/definitions/item"
                        }
                      ]
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all records",
              "description": "To list all records, send a GET request to the `/items` endpoint.\nThe following table contains the list of all the possible arguments, along with their type, description and examples values.\nTo filter items you can use or `filter[ids]` alone or `filter[type]` in combination with other type of filters.\n",
              "href": "/items",
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "filter[ids]": {
                    "description": "IDs to fetch, comma separated",
                    "example": "12,31",
                    "type": [
                      "string"
                    ]
                  },
                  "filter[type]": {
                    "description": "model ID to filter",
                    "example": "44",
                    "type": [
                      "string"
                    ]
                  },
                  "filter[query]": {
                    "description": "textual query to match",
                    "example": "foo",
                    "type": [
                      "string"
                    ]
                  },
                  "page[offset]": {
                    "description": "index of first record to fetch",
                    "example": 2,
                    "default": 1,
                    "type": [
                      "integer"
                    ]
                  },
                  "page[limit]": {
                    "description": "number of records to fetch",
                    "example": 15,
                    "default": 30,
                    "type": [
                      "integer"
                    ]
                  },
                  "version": {
                    "description": "whether you want the currently published versions of your records, or the latest available",
                    "example": "published",
                    "default": "latest",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "hrefSchema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "filter[ids]": {
                    "description": "IDs to fetch, comma separated",
                    "example": "12,31",
                    "type": [
                      "string"
                    ]
                  },
                  "filter[type]": {
                    "description": "model ID to filter",
                    "example": "44",
                    "type": [
                      "string"
                    ]
                  },
                  "filter[query]": {
                    "description": "textual query to match",
                    "example": "foo",
                    "type": [
                      "string"
                    ]
                  },
                  "page[offset]": {
                    "description": "index of first record to fetch",
                    "example": 2,
                    "default": 1,
                    "type": [
                      "integer"
                    ]
                  },
                  "page[limit]": {
                    "description": "number of records to fetch",
                    "example": 15,
                    "default": 30,
                    "type": [
                      "integer"
                    ]
                  },
                  "version": {
                    "description": "whether you want the currently published versions of your records, or the latest available",
                    "example": "published",
                    "default": "latest",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item"
                    }
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "total_count"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "total_count": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "references",
              "title": "List all the records of a model that link to a specific record",
              "private": true,
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/references/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a record",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}",
              "hrefSchema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "version": {
                    "description": "whether you want the currently published version of the record, or the latest available",
                    "example": "published",
                    "default": "latest",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a record",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "batch_destroy",
              "title": "Delete multiple records",
              "private": true,
              "description": "",
              "href": "/items",
              "hrefSchema": {
                "type": [
                  "object"
                ],
                "required": [
                  "filter[ids]"
                ],
                "additionalProperties": false,
                "properties": {
                  "filter[ids]": {
                    "description": "IDs to fetch, comma separated",
                    "example": "42,554",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array"
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "successful",
                      "failed"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "successful": {
                        "type": "integer"
                      },
                      "failed": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "batch_publish",
              "title": "Publish multiple records",
              "description": "",
              "href": "/items/publish",
              "hrefSchema": {
                "type": [
                  "object"
                ],
                "required": [
                  "filter[ids]"
                ],
                "additionalProperties": false,
                "properties": {
                  "filter[ids]": {
                    "description": "IDs to fetch, comma separated",
                    "example": "42,86",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array"
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "successful",
                      "failed"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "successful": {
                        "type": "integer"
                      },
                      "failed": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "batch_unpublish",
              "title": "Unpublish multiple records",
              "description": "",
              "href": "/items/unpublish",
              "hrefSchema": {
                "type": [
                  "object"
                ],
                "required": [
                  "filter[ids]"
                ],
                "additionalProperties": false,
                "properties": {
                  "filter[ids]": {
                    "description": "IDs to fetch, comma separated",
                    "example": "42,86",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array"
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "successful",
                      "failed"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "successful": {
                        "type": "integer"
                      },
                      "failed": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "publish",
              "title": "Publish a record",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/publish",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "unpublish",
              "title": "Unpublish a record",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/unpublish",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Record",
          "description": "DatoCMS stores the individual pieces of content you create from a model as records, which are much like table rows in a database. For backward-compatibility reasons, the API refers to records as \"items\".",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/item/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/item/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/item/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^item$",
              "example": "item"
            },
            "id": {
              "description": "ID of record",
              "type": "string",
              "example": "4235"
            },
            "attributes": {
              "description": "The JSON data associated to the record",
              "type": "object",
              "example": {
                "title": "My first blog post!",
                "content": "Lorem ipsum dolor sit amet...",
                "category": "24",
                "image": {
                  "upload_id": "1235",
                  "alt": "Alt text",
                  "title": "Image title",
                  "custom_data": {}
                }
              }
            },
            "meta": {
              "type": "object",
              "description": "Meta information regarding the record",
              "additionalProperties": false,
              "properties": {
                "created_at": {
                  "description": "Date of creation",
                  "type": "string",
                  "format": "date-time"
                },
                "updated_at": {
                  "description": "Last update time",
                  "type": "string",
                  "format": "date-time"
                },
                "published_at": {
                  "description": "Date of last publication",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "first_published_at": {
                  "description": "Date of first publication",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "publication_scheduled_at": {
                  "description": "Date of future publication",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "status": {
                  "description": "Status",
                  "type": [
                    "null",
                    "string"
                  ],
                  "enum": [
                    "draft",
                    "updated",
                    "published"
                  ]
                },
                "is_valid": {
                  "description": "Whether the current record is valid or not",
                  "type": "boolean"
                },
                "current_version": {
                  "description": "The current record version",
                  "type": "string"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "item_type"
              ],
              "additionalProperties": false,
              "properties": {
                "item_type": {
                  "description": "The record's model",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/item_type/definitions/data"
                    }
                  }
                },
                "creator": {
                  "description": "The entity (account/editor/access token) who created the record",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/account/definitions/data"
                        },
                        {
                          "$ref": "#/definitions/access_token/definitions/data"
                        },
                        {
                          "$ref": "#/definitions/user/definitions/data"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/item/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/item/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/item/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/item/definitions/relationships"
            },
            "meta": {
              "$ref": "#/definitions/item/definitions/meta"
            }
          }
        },
        "item_version": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Record version",
          "description": "",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/item_version/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/item_version/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/item_version/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^item_version$",
              "example": "item_version"
            },
            "id": {
              "description": "ID of item_version",
              "type": "string",
              "example": "4235"
            },
            "attributes": {
              "description": "The JSON data associated to the item_version",
              "type": "object",
              "example": {
                "title": "My first blog post!",
                "content": "Lorem ipsum dolor sit amet...",
                "category": "24",
                "image": {
                  "path": "/205/1516802387-foobar.png",
                  "width": 1905,
                  "height": 6472,
                  "format": "png",
                  "size": 1596377,
                  "alt": null,
                  "title": null
                },
                "published_at": "2016-09-20T18:50:24.914Z"
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "item",
                "editor"
              ],
              "additionalProperties": false,
              "properties": {
                "item": {
                  "description": "The records' version",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/item/definitions/data"
                    }
                  }
                },
                "editor": {
                  "description": "Editor",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/user/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/item_version/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/item_version/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/item_version/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/item_version/definitions/relationships"
            }
          }
        },
        "site": {
          "position": 1,
          "links": [
            {
              "rel": "self",
              "method": "GET",
              "title": "Retrieve the site",
              "description": "",
              "href": "/site",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "oneOf": [
                        {
                          "$ref": "#/definitions/menu_item"
                        },
                        {
                          "$ref": "#/definitions/user"
                        },
                        {
                          "$ref": "#/definitions/item_type"
                        },
                        {
                          "$ref": "#/definitions/role"
                        },
                        {
                          "$ref": "#/definitions/field"
                        },
                        {
                          "$ref": "#/definitions/upload"
                        },
                        {
                          "$ref": "#/definitions/sso_user"
                        }
                      ]
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update the site's settings",
              "description": "",
              "href": "/site",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/site/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/site/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "no_index": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/no_index"
                          },
                          "favicon": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/favicon"
                          },
                          "global_seo": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/global_seo"
                          },
                          "name": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/name"
                          },
                          "theme": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/theme"
                          },
                          "locales": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/locales"
                          },
                          "timezone": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/timezone"
                          },
                          "sso_saml_init_url": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/sso_saml_init_url"
                          },
                          "require_2fa": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/require_2fa"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "sso_default_role": {
                            "type": "object",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "$ref": "#/definitions/role/definitions/data"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Site",
          "description": "A site represents a specific DatoCMS administrative area",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/site/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/site/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/site/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^site$",
              "example": "site"
            },
            "id": {
              "description": "ID of site",
              "type": "string",
              "example": "155"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "locales",
                "domain",
                "theme"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Site name",
                  "example": "My Awesome Website"
                },
                "domain": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Administrative area custom domain",
                  "example": "admin.my-awesome-website.com"
                },
                "google_maps_api_token": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Google API Key to be used by the LatLon widget",
                  "example": "xxxxxxxxxxxxx"
                },
                "imgix_host": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Imgix host",
                  "example": "www.datocms-assets.com"
                },
                "internal_domain": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "DatoCMS internal domain for the administrative area",
                  "example": "my-website.admin.datocms.com"
                },
                "locales": {
                  "type": "array",
                  "description": "Available locales",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "example": [
                    "en"
                  ]
                },
                "timezone": {
                  "type": "string",
                  "description": "Site default timezone",
                  "example": "Europe/London"
                },
                "items_count": {
                  "type": "integer",
                  "description": "Number of items present in the site",
                  "example": 812
                },
                "no_index": {
                  "type": "boolean",
                  "description": "Whether the website needs to be indexed by search engines or not",
                  "example": true
                },
                "favicon": {
                  "description": "The upload id for the favicon",
                  "example": "123",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "theme_hue": {
                  "description": "Specifies the hue to use primary color in Site backend",
                  "type": "integer",
                  "example": 167
                },
                "last_data_change_at": {
                  "description": "Specifies the last time when a change of data occurred",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time",
                  "example": "2017-03-30T09:29:14.872Z"
                },
                "last_dump_at": {
                  "description": "Specifies the last time an integration plugin called the API",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time",
                  "example": "2017-02-10T11:03:42.208Z"
                },
                "deployable": {
                  "description": "Specifies whether all the deploy informations are correctly setup or not",
                  "type": "boolean",
                  "example": true
                },
                "frontend_url": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Frontend website url",
                  "example": "https://www.mywebsite.com/"
                },
                "require_2fa": {
                  "description": "Specifies whether all users of this site need to authenticate using two-factor authentication",
                  "type": "boolean",
                  "example": false
                },
                "sso_saml_init_url": {
                  "description": "Specifies if the Single Sign-on URL to reach",
                  "type": [
                    "null",
                    "string"
                  ],
                  "example": "https://sso.datocms.com/XXX/saml/init"
                },
                "theme": {
                  "description": "Specifies the theme to use in administrative area",
                  "type": "object",
                  "properties": {
                    "primary_color": {
                      "type": "object",
                      "required": [
                        "red",
                        "green",
                        "blue",
                        "alpha"
                      ],
                      "properties": {
                        "red": {
                          "type": "integer",
                          "example": 128
                        },
                        "green": {
                          "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color/properties/red"
                        },
                        "blue": {
                          "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color/properties/red"
                        },
                        "alpha": {
                          "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color/properties/red"
                        }
                      }
                    },
                    "light_color": {
                      "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color"
                    },
                    "accent_color": {
                      "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color"
                    },
                    "dark_color": {
                      "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color"
                    },
                    "logo": {
                      "description": "The site logo",
                      "example": "123",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "global_seo": {
                  "description": "Specifies default global settings",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "site_name": {
                      "type": [
                        "string"
                      ],
                      "description": "Site name, used in social sharing",
                      "example": "My Awesome Website"
                    },
                    "fallback_seo": {
                      "type": [
                        "object"
                      ],
                      "required": [
                        "title",
                        "description",
                        "image"
                      ],
                      "properties": {
                        "title": {
                          "type": [
                            "string"
                          ],
                          "example": "Default meta title"
                        },
                        "description": {
                          "type": [
                            "string"
                          ],
                          "example": "Default meta description"
                        },
                        "image": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "The id of the image",
                          "example": "123"
                        },
                        "twitter_card": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "enum": [
                            "summary",
                            "summary_large_image"
                          ],
                          "description": "Determines how a Twitter link preview is shown",
                          "example": "Large Image"
                        }
                      }
                    },
                    "title_suffix": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "example": " - My Awesome Website",
                      "description": "Title meta tag suffix"
                    },
                    "facebook_page_url": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "URL of facebook page",
                      "example": "http://facebook.com/awesomewebsite"
                    },
                    "twitter_account": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Twitter account associated to website",
                      "example": "@awesomewebsite"
                    }
                  }
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "menu_items",
                "item_types",
                "account",
                "users",
                "sso_users",
                "roles",
                "usage"
              ],
              "additionalProperties": false,
              "properties": {
                "account": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/account/definitions/data"
                    }
                  }
                },
                "deployment_environments": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "The list of deployment environment",
                      "items": {
                        "$ref": "#/definitions/deployment_environment/definitions/data"
                      }
                    }
                  }
                },
                "usage": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/subscription_compatibility/definitions/data"
                    }
                  }
                },
                "menu_items": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "The list of site menu items",
                      "items": {
                        "$ref": "#/definitions/menu_item/definitions/data"
                      }
                    }
                  }
                },
                "sso_users": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "The list of site SSO users",
                      "items": {
                        "$ref": "#/definitions/sso_user/definitions/data"
                      }
                    }
                  }
                },
                "users": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "The list of site users",
                      "items": {
                        "$ref": "#/definitions/user/definitions/data"
                      }
                    }
                  }
                },
                "item_types": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "description": "The list of site item types",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/item_type/definitions/data"
                      }
                    }
                  }
                },
                "sso_default_role": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "description": "Specifies the default role for newly created identity providers users",
                      "type": "object",
                      "items": {
                        "$ref": "#/definitions/role/definitions/data"
                      }
                    }
                  }
                },
                "roles": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "description": "The list of site roles",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/role/definitions/data"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/site/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/site/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/site/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/site/definitions/relationships"
            }
          }
        },
        "menu_item": {
          "position": 6,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new menu item",
              "description": "",
              "href": "/menu-items",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/menu_item/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/menu_item/definitions/attributes"
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "item_type": {
                            "$ref": "#/definitions/menu_item/definitions/relationships/properties/item_type"
                          },
                          "parent": {
                            "$ref": "#/definitions/menu_item/definitions/relationships/properties/parent"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/menu_item"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a menu item",
              "description": "",
              "href": "/menu-items/{(%2Fschemata%2Fmenu_item%23%2Fdefinitions%2Fmenu_item%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/menu_item/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/menu_item/properties/id"
                      },
                      "attributes": {
                        "$ref": "#/definitions/menu_item/properties/attributes"
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "item_type": {
                            "$ref": "#/definitions/menu_item/definitions/relationships/properties/item_type"
                          },
                          "parent": {
                            "$ref": "#/definitions/menu_item/definitions/relationships/properties/parent"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/menu_item"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all menu items",
              "description": "",
              "href": "/menu-items",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/menu_item"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a menu item",
              "description": "",
              "href": "/menu-items/{(%2Fschemata%2Fmenu_item%23%2Fdefinitions%2Fmenu_item%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/menu_item"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a menu item",
              "description": "",
              "href": "/menu-items/{(%2Fschemata%2Fmenu_item%23%2Fdefinitions%2Fmenu_item%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/menu_item"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Menu Item",
          "description": "In DatoCMS you can organize the different Models present in your administrative area reordering and grouping them, so that their purpose will be more clear to the final editor.",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/menu_item/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/menu_item/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/menu_item/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^menu_item$",
              "example": "menu_item"
            },
            "id": {
              "description": "ID of menu item",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "label",
                "position"
              ],
              "additionalProperties": false,
              "properties": {
                "label": {
                  "type": "string",
                  "description": "The label of the menu item",
                  "example": "Posts"
                },
                "external_url": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "position": {
                  "type": "integer",
                  "description": "Ordering index",
                  "example": 1
                },
                "open_in_new_tab": {
                  "type": "boolean",
                  "description": "Opens link in new tab",
                  "example": true
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "item_type",
                "parent",
                "children"
              ],
              "additionalProperties": false,
              "properties": {
                "item_type": {
                  "type": "object",
                  "description": "item type associated with the menu item",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/item_type/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ]
                    }
                  }
                },
                "parent": {
                  "type": "object",
                  "description": "Parent menu item",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "type": [
                            "null"
                          ]
                        },
                        {
                          "$ref": "#/definitions/menu_item/definitions/data"
                        }
                      ],
                      "example": null
                    }
                  }
                },
                "children": {
                  "type": "object",
                  "description": "Underlying menu items",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/menu_item/definitions/data"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/menu_item/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/menu_item/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/menu_item/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/menu_item/definitions/relationships"
            }
          }
        },
        "deploy_event": {
          "position": 7,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all deploy events",
              "description": "",
              "href": "/deploy-events",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/deploy_event"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a deploy event",
              "description": "",
              "href": "/deploy-events/{(%2Fschemata%2Fdeploy_event%23%2Fdefinitions%2Fdeploy_event%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/deploy_event"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Deploy activity",
          "description": "Represents an event occurred during the deploy process of your administrative area.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/deploy_event/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/deploy_event/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/deploy_event/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^deploy_event$",
              "example": "deploy_event"
            },
            "id": {
              "description": "ID of menu item",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "event_type",
                "data",
                "created_at"
              ],
              "additionalProperties": false,
              "properties": {
                "event_type": {
                  "type": "string",
                  "enum": [
                    "request",
                    "request_failed",
                    "response_success",
                    "response_failure",
                    "response_timeout"
                  ],
                  "description": "The type of activity",
                  "example": "response_success"
                },
                "created_at": {
                  "description": "The moment the activity occurred",
                  "type": [
                    "string"
                  ],
                  "format": "date-time",
                  "example": "2016-09-20T18:50:24.914Z"
                },
                "data": {
                  "description": "Any details regarding the event",
                  "type": [
                    "object"
                  ],
                  "example": {
                    "request_body": "{\"object_kind\":\"build\",\"ref\":\"master\",\"tag\":false,\"before_sha\":\"0000000000000000000000000000000000000000\",\"sha\":\"ecfccf5ea28af900c14b499a2b762e029c7492\",\"build_id\":10495,\"build_name\":\"build\",\"build_stage\":\"test\",\"build_status\":\"success\",\"build_started_at\":\"2016-09-20 18:49:22 UTC\",\"build_finished_at\":\"2016-09-20 18:50:24 UTC\",\"build_duration\":62.279854524,\"build_allow_failure\":false,\"project_id\":195,\"project_id\":\"Stefano Verna / awesome-website\",\"user\":{\"id\":null,\"name\":null,\"email\":null},\"commit\":{\"id\":6754,\"sha\":\"ecfccf5ea28af900c6614b499a2b762e029c7492\",\"message\":\"Update gems\\n\",\"author_name\":\"Stefano Verna\",\"author_email\":\"s.verna@datocms.com\",\"status\":\"success\",\"duration\":62,\"started_at\":\"2016-09-20 18:49:22 UTC\",\"finished_at\":\"2016-09-20 18:50:24 UTC\"},\"repository\":{\"name\":\"awesome-website\",\"url\":\"git@gitlab.com:stefanoverna/awesome-website.git\",\"description\":\"\",\"visibility_level\":0}}",
                    "request_headers": {
                      "Via": "1.1 vegur",
                      "Host": "webhooks.datocms.com",
                      "Origin": null,
                      "Version": "HTTP/1.1",
                      "Connection": "close",
                      "Connect-Time": "0",
                      "X-Request-Id": "5c1beced-0fe3-4c5b-b45d-68ba4a15b5f3",
                      "X-Gitlab-Event": "Build Hook",
                      "X-Forwarded-For": "46.101.135.219",
                      "X-Request-Start": "1474397424903",
                      "Total-Route-Time": "0",
                      "X-Forwarded-Port": "443",
                      "X-Forwarded-Proto": "https"
                    }
                  }
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "deployment_environment"
              ],
              "additionalProperties": false,
              "properties": {
                "deployment_environment": {
                  "type": "object",
                  "description": "Source deployment environment",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/deployment_environment/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/deploy_event/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/deploy_event/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/deploy_event/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/deploy_event/definitions/relationships"
            }
          }
        },
        "account": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Account",
          "description": "DatoCMS account",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/account/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/account/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/account/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^account$",
              "example": "account"
            },
            "id": {
              "description": "ID of account",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "email",
                "company"
              ],
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email",
                  "example": "foo@bar.com"
                },
                "first_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "First name",
                  "example": "Mark"
                },
                "last_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Last name",
                  "example": "Smith"
                },
                "company": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Company name",
                  "example": "Dundler Mifflin"
                },
                "password": {
                  "type": "string",
                  "description": "Password"
                },
                "api_token": {
                  "type": "string",
                  "description": "API token"
                },
                "is_2fa_active": {
                  "type": "boolean",
                  "description": "Whether 2-factor authentication is active for this account or not"
                },
                "provisioning_2fa_uri": {
                  "type": "string",
                  "description": "2-factor authentication provisioning URI"
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/account/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/account/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/account/definitions/attributes"
            }
          }
        },
        "item_type": {
          "position": 3,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new model",
              "description": "",
              "href": "/item-types",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item_type/definitions/type"
                      },
                      "attributes": {
                        "description": "JSON API attributes",
                        "type": "object",
                        "required": [
                          "name",
                          "api_key"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/name"
                          },
                          "api_key": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/api_key"
                          },
                          "singleton": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/singleton"
                          },
                          "all_locales_required": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/all_locales_required"
                          },
                          "sortable": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/sortable"
                          },
                          "modular_block": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/modular_block"
                          },
                          "draft_mode_active": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/draft_mode_active"
                          },
                          "tree": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/tree"
                          },
                          "ordering_direction": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/ordering_direction"
                          },
                          "collection_appeareance": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/collection_appearance"
                          },
                          "collection_appearance": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/collection_appearance"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "ordering_field": {
                            "$ref": "#/definitions/item_type/definitions/relationships/properties/ordering_field"
                          },
                          "title_field": {
                            "$ref": "#/definitions/item_type/definitions/relationships/properties/title_field"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "oneOf": [
                        {
                          "$ref": "#/definitions/menu_item"
                        }
                      ]
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a model",
              "description": "",
              "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item_type/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/item_type/properties/id"
                      },
                      "attributes": {
                        "$ref": "#/definitions/item_type/properties/attributes"
                      },
                      "relationships": {
                        "type": "object",
                        "required": [
                          "ordering_field",
                          "title_field"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "ordering_field": {
                            "$ref": "#/definitions/item_type/definitions/relationships/properties/ordering_field"
                          },
                          "title_field": {
                            "$ref": "#/definitions/item_type/definitions/relationships/properties/title_field"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all models",
              "description": "",
              "href": "/item-types",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a model",
              "description": "",
              "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "duplicate",
              "title": "Duplicate model",
              "description": "",
              "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}/duplicate",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a model",
              "description": "",
              "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Model",
          "description": "The way you define the kind of content you can edit inside your administrative area passes through the concept of Models, which are much like database tables. For backward-compatibility reasons, the API refers to models as \"item types\".",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/item_type/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/item_type/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/item_type/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^item_type$",
              "example": "item_type"
            },
            "id": {
              "description": "ID of item type",
              "type": "string",
              "example": "44"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "api_key",
                "singleton",
                "sortable",
                "modular_block",
                "tree",
                "ordering_direction",
                "draft_mode_active",
                "all_locales_required"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Blog post",
                  "description": "Name of the model"
                },
                "api_key": {
                  "type": "string",
                  "example": "post",
                  "description": "API key of the model"
                },
                "collection_appeareance": {
                  "type": "string",
                  "enum": [
                    "compact",
                    "table"
                  ],
                  "example": "compact",
                  "description": "The way the model collection should be presented to the editors"
                },
                "collection_appearance": {
                  "type": "string",
                  "enum": [
                    "compact",
                    "table"
                  ],
                  "example": "compact",
                  "description": "The way the model collection should be presented to the editors"
                },
                "singleton": {
                  "type": "boolean",
                  "example": false,
                  "description": "Whether the model is single-instance or not"
                },
                "all_locales_required": {
                  "type": "boolean",
                  "example": false,
                  "description": "Whether we require all the project locales to be present for each localized field or not"
                },
                "sortable": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether editors can sort records via drag & drop or not"
                },
                "modular_block": {
                  "type": "boolean",
                  "example": false,
                  "description": "Whether this model is a modular content block or not"
                },
                "draft_mode_active": {
                  "type": "boolean",
                  "example": false,
                  "description": "Whether draft/published mode is active or not"
                },
                "tree": {
                  "type": "boolean",
                  "example": false,
                  "description": "Whether editors can organize records in a tree or not"
                },
                "ordering_direction": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "example": null,
                  "enum": [
                    null,
                    "asc",
                    "desc"
                  ],
                  "description": "If an ordering field is set, this fields specify the sorting direction"
                },
                "has_singleton_item": {
                  "type": [
                    "boolean"
                  ],
                  "example": true,
                  "description": "If this model is single-instance, this tells the single-instance record has already been created or not"
                }
              },
              "anyOf": [
                {
                  "required": [
                    "collection_appearance"
                  ]
                },
                {
                  "required": [
                    "collection_appeareance"
                  ]
                }
              ]
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "fields"
              ],
              "additionalProperties": false,
              "properties": {
                "menu_item": {
                  "type": "object",
                  "description": "The menu item instance related to this item type",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/menu_item/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ],
                      "example": null
                    }
                  }
                },
                "singleton_item": {
                  "type": "object",
                  "description": "The item instance related to this item type",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/item/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ],
                      "example": null
                    }
                  }
                },
                "fields": {
                  "type": "object",
                  "description": "The list of item type fields",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/field/definitions/data"
                      }
                    }
                  }
                },
                "title_field": {
                  "type": "object",
                  "description": "The field to use as display title",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/field/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ],
                      "example": null
                    }
                  }
                },
                "ordering_field": {
                  "type": "object",
                  "description": "The field upon which the collection is sorted",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/field/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ],
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/item_type/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/item_type/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/item_type/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/item_type/definitions/relationships"
            }
          }
        },
        "field": {
          "position": 4,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new field",
              "description": "",
              "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}/fields",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/field/definitions/type"
                      },
                      "attributes": {
                        "description": "JSON API attributes",
                        "type": "object",
                        "required": [
                          "label",
                          "field_type",
                          "api_key"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "label": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/label"
                          },
                          "field_type": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/field_type"
                          },
                          "api_key": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/api_key"
                          },
                          "localized": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/localized"
                          },
                          "validators": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/validators"
                          },
                          "appeareance": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/appeareance"
                          },
                          "appearance": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/appearance"
                          },
                          "position": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/position"
                          },
                          "hint": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/hint"
                          },
                          "default_value": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/default_value"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/field"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a field",
              "description": "",
              "href": "/fields/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Ffield%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/field/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/field/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "default_value": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/default_value"
                          },
                          "label": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/label"
                          },
                          "api_key": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/api_key"
                          },
                          "localized": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/localized"
                          },
                          "validators": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/validators"
                          },
                          "appeareance": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/appeareance"
                          },
                          "appearance": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/appearance"
                          },
                          "position": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/position"
                          },
                          "field_type": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/field_type"
                          },
                          "hint": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/hint"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/field"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all fields",
              "description": "",
              "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}/fields",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/field"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a field",
              "description": "",
              "href": "/fields/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Ffield%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/field"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a field",
              "description": "",
              "href": "/fields/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Ffield%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/field"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Field",
          "description": "Each Model consists of a set of fields. Using the database metaphore, fields are like table columns, and when creating them you need to specify their type (\"string\", \"image\", \"float\", etc.) and any required validation.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/field/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/field/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/field/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^field$",
              "example": "field"
            },
            "id": {
              "description": "ID of field",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "label",
                "field_type",
                "api_key",
                "localized",
                "validators",
                "position",
                "hint"
              ],
              "additionalProperties": false,
              "properties": {
                "label": {
                  "type": "string",
                  "description": "The label of the field",
                  "example": "Title"
                },
                "field_type": {
                  "type": "string",
                  "description": "Type of input",
                  "example": "string"
                },
                "localized": {
                  "type": "boolean",
                  "description": "Whether the field needs to be multilanguage or not",
                  "example": true
                },
                "default_value": {
                  "type": [
                    "boolean",
                    "null",
                    "string",
                    "number",
                    "object"
                  ],
                  "description": "Default value for Field. When field is localized accepts an object of default values with site locales as keys",
                  "example": {
                    "en": "A default value",
                    "it": "Un valore di default"
                  }
                },
                "api_key": {
                  "type": "string",
                  "description": "Field API key",
                  "example": "title"
                },
                "hint": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Field hint",
                  "example": "This field will be used as post title"
                },
                "validators": {
                  "type": "object",
                  "description": "Optional field validations",
                  "example": {
                    "required": {}
                  }
                },
                "appeareance": {
                  "type": "object",
                  "required": [
                    "editor",
                    "parameters"
                  ],
                  "description": "Field appearance",
                  "example": {
                    "editor": "single_line",
                    "parameters": {
                      "heading": false
                    },
                    "addons": []
                  },
                  "properties": {
                    "editor": {
                      "type": "string"
                    },
                    "parameters": {
                      "type": "object"
                    }
                  }
                },
                "appearance": {
                  "type": "object",
                  "required": [
                    "editor",
                    "parameters"
                  ],
                  "description": "Field appearance",
                  "example": {
                    "editor": "single_line",
                    "parameters": {
                      "heading": false
                    },
                    "addons": []
                  },
                  "properties": {
                    "editor": {
                      "type": "string"
                    },
                    "parameters": {
                      "type": "object"
                    }
                  }
                },
                "position": {
                  "type": "integer",
                  "description": "Ordering index",
                  "example": 1
                }
              },
              "anyOf": [
                {
                  "required": [
                    "appearance"
                  ]
                },
                {
                  "required": [
                    "appeareance"
                  ]
                }
              ]
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "item_type"
              ],
              "additionalProperties": false,
              "properties": {
                "item_type": {
                  "type": "object",
                  "description": "Field item type",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/item_type/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/field/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/field/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/field/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/field/definitions/relationships"
            }
          }
        },
        "user": {
          "position": 5,
          "links": [
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update an editor",
              "description": "",
              "href": "/users/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/user/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/user/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "is_active": {
                            "$ref": "#/definitions/user/definitions/attributes/properties/is_active"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "role"
                        ],
                        "properties": {
                          "role": {
                            "$ref": "#/definitions/user/definitions/relationships/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/user"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all editors",
              "description": "",
              "href": "/users",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/user"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve an editor",
              "description": "",
              "href": "/users/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/user"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete an editor",
              "description": "",
              "href": "/users/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/user"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Editor",
          "description": "A DatoCMS administrative area can be accessed by multiple people. Every editor is linked to a specific Role, which describes what actions it will be able to perform once logged in.",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/user/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/user/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/user/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^user$",
              "example": "user"
            },
            "id": {
              "description": "ID of editor",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "email"
              ],
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email",
                  "example": "mark.smith@example.com"
                },
                "is_2fa_active": {
                  "type": "boolean",
                  "description": "Whether 2-factor authentication is active for this account or not"
                },
                "full_name": {
                  "type": "string",
                  "description": "Full name",
                  "example": "Mark Smith"
                },
                "is_active": {
                  "type": "boolean",
                  "description": "Whether the user is active or not",
                  "example": true
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "role"
              ],
              "additionalProperties": false,
              "properties": {
                "role": {
                  "type": "object",
                  "description": "Role",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/role/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/user/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/user/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/user/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/user/definitions/relationships"
            }
          }
        },
        "search_result": {
          "position": 6,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "Search for results",
              "description": "",
              "href": "/search-results",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/search_result"
                    }
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "total_count"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "total_count": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Search result",
          "description": "DatoCMS Site Search is a way to deliver tailored search results to your site visitors. This is the endpoint you can use to query for results.",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/search_result/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/search_result/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/search_result/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^search_result$",
              "example": "search_result"
            },
            "id": {
              "description": "ID of result",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "title",
                "body_excerpt",
                "url",
                "score",
                "highlight"
              ],
              "additionalProperties": false,
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Page title",
                  "example": "My Page"
                },
                "body_excerpt": {
                  "type": "string",
                  "description": "First lines of body",
                  "example": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed eiusmod"
                },
                "url": {
                  "type": "string",
                  "description": "URL",
                  "example": "Smith"
                },
                "score": {
                  "type": "number",
                  "description": "Score",
                  "example": 11.3
                },
                "highlight": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "title": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Foo <em>bar</em> qux"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "body": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Foo <em>bar</em> qux"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/search_result/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/search_result/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/search_result/definitions/attributes"
            }
          }
        },
        "session": {
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new session",
              "description": "",
              "private": true,
              "href": "/sessions",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "anyOf": [
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "attributes"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type field",
                            "pattern": "^email_credentials$",
                            "example": "email_credentials"
                          },
                          "attributes": {
                            "description": "JSON API attributes",
                            "type": "object",
                            "required": [
                              "email",
                              "password"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "Email",
                                "example": "foo@bar.com"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password",
                                "example": "changeme"
                              },
                              "otp_code": {
                                "type": "string",
                                "description": "Two-factor authentication one-time password",
                                "example": "123512"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "attributes"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type field",
                            "pattern": "^password_reset$",
                            "example": "password_reset"
                          },
                          "attributes": {
                            "description": "JSON API attributes",
                            "type": "object",
                            "required": [
                              "token",
                              "password"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "token": {
                                "type": "string",
                                "description": "Invitation token",
                                "example": "XXXYYYZZZ"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password",
                                "example": "changeme"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "attributes"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type field",
                            "pattern": "^invitation$",
                            "example": "invitation"
                          },
                          "attributes": {
                            "description": "JSON API attributes",
                            "type": "object",
                            "required": [
                              "token",
                              "password"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "token": {
                                "type": "string",
                                "description": "Invitation token",
                                "example": "XXXYYYZZZ"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password",
                                "example": "changeme"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/session"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/user"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Session",
          "description": "A session is required to access to read-and-write API endpoints",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/session/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/session/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/session/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^session$",
              "example": "session"
            },
            "id": {
              "description": "JSON web token for the session",
              "type": "string",
              "example": "eyJCJhbGci.eyJhaWwuY29tIn0.32wQOMci"
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "user"
              ],
              "additionalProperties": false,
              "properties": {
                "user": {
                  "type": "object",
                  "description": "The user associated with the session",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/user/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/session/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/session/definitions/id"
            },
            "relationships": {
              "$ref": "#/definitions/session/definitions/relationships"
            }
          }
        },
        "role": {
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new role",
              "description": "",
              "href": "/roles",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/role/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/role/definitions/attributes"
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/role"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a role",
              "description": "",
              "href": "/roles/{(%2Fschemata%2Frole%23%2Fdefinitions%2Frole%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/role/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/role/properties/id"
                      },
                      "attributes": {
                        "$ref": "#/definitions/role/properties/attributes"
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/role"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all roles",
              "description": "",
              "href": "/roles",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/role"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a role",
              "description": "",
              "href": "/roles/{(%2Fschemata%2Frole%23%2Fdefinitions%2Frole%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/role"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a role",
              "description": "",
              "href": "/roles/{(%2Fschemata%2Frole%23%2Fdefinitions%2Frole%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/role"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Role",
          "description": "A Role represents a specific set of actions an editor (or an API token) can perform on your administrative area.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/role/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/role/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/role/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^role$",
              "example": "role"
            },
            "id": {
              "description": "ID of role",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "can_edit_site",
                "can_edit_favicon",
                "can_edit_schema",
                "can_manage_users",
                "can_manage_webhooks",
                "can_manage_deployment_environments",
                "can_manage_access_tokens",
                "can_perform_site_search",
                "positive_item_type_permissions",
                "negative_item_type_permissions",
                "positive_deployment_environment_permissions",
                "negative_deployment_environment_permissions"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the role",
                  "example": "Editor"
                },
                "can_edit_favicon": {
                  "type": "boolean",
                  "description": "Can users edit the site favicon/global SEO settings?",
                  "example": true
                },
                "can_edit_site": {
                  "type": "boolean",
                  "description": "Can users edit the site settings?",
                  "example": true
                },
                "can_edit_schema": {
                  "type": "boolean",
                  "description": "Can users edit the schema?",
                  "example": true
                },
                "can_manage_users": {
                  "type": "boolean",
                  "description": "Can users invite other users?",
                  "example": true
                },
                "can_manage_shared_filters": {
                  "type": "boolean",
                  "description": "Can users manage shared filters?",
                  "example": true
                },
                "can_manage_deployment_environments": {
                  "type": "boolean",
                  "description": "Can users manage deployment environments?",
                  "example": true
                },
                "can_manage_webhooks": {
                  "type": "boolean",
                  "description": "Can users manage webhooks?",
                  "example": true
                },
                "can_manage_access_tokens": {
                  "type": "boolean",
                  "description": "Can manage access tokens",
                  "example": true
                },
                "can_perform_site_search": {
                  "type": "boolean",
                  "description": "Can perform site search",
                  "example": true
                },
                "positive_item_type_permissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "item_type",
                      "action",
                      "on_creator"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "item_type": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/item_type/definitions/data/properties/id"
                          },
                          {
                            "type": [
                              "null"
                            ]
                          }
                        ]
                      },
                      "action": {
                        "type": [
                          "string"
                        ],
                        "enum": [
                          "all",
                          "read",
                          "update",
                          "create",
                          "delete",
                          "publish",
                          "edit_creator",
                          "take_over"
                        ],
                        "description": "Permitted action",
                        "example": "all"
                      },
                      "on_creator": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "anyone",
                          "self",
                          "role",
                          null
                        ],
                        "description": "Permitted creator",
                        "example": "self"
                      }
                    }
                  }
                },
                "negative_item_type_permissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "item_type",
                      "action"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "item_type": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/item_type/definitions/data/properties/id"
                          },
                          {
                            "type": [
                              "null"
                            ]
                          }
                        ]
                      },
                      "action": {
                        "type": [
                          "string"
                        ],
                        "enum": [
                          "all",
                          "read",
                          "update",
                          "create",
                          "delete",
                          "publish",
                          "edit_creator",
                          "take_over"
                        ],
                        "description": "Permitted action",
                        "example": "all"
                      },
                      "on_creator": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "anyone",
                          "self",
                          "role",
                          null
                        ],
                        "description": "Permitted creator",
                        "example": "self"
                      }
                    }
                  }
                },
                "positive_deployment_environment_permissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "deployment_environment"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "deployment_environment": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/deployment_environment/definitions/data/properties/id"
                          },
                          {
                            "type": [
                              "null"
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "negative_deployment_environment_permissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "deployment_environment"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "deployment_environment": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/deployment_environment/definitions/data/properties/id"
                          },
                          {
                            "type": [
                              "null"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "deployment_environments"
              ],
              "additionalProperties": false,
              "properties": {
                "deployment_environments": {
                  "type": "object",
                  "description": "Environments on which this role can deploy",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/deployment_environment/definitions/data"
                      }
                    }
                  }
                },
                "parent": {
                  "type": "object",
                  "description": "Parent menu item",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "type": [
                            "null"
                          ]
                        },
                        {
                          "$ref": "#/definitions/menu_item/definitions/data"
                        }
                      ],
                      "example": null
                    }
                  }
                },
                "children": {
                  "type": "object",
                  "description": "Underlying menu items",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/menu_item/definitions/data"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/role/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/role/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/role/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/role/definitions/relationships"
            }
          }
        },
        "access_token": {
          "position": 8,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new access token",
              "description": "",
              "href": "/access_tokens",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/access_token/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "name",
                          "can_access_cda",
                          "can_access_cda_preview",
                          "can_access_cma"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/name"
                          },
                          "can_access_cda": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cda"
                          },
                          "can_access_cda_preview": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cda_preview"
                          },
                          "can_access_cma": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cma"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "role"
                        ],
                        "properties": {
                          "role": {
                            "$ref": "#/definitions/access_token/definitions/relationships/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/access_token"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update an access token",
              "description": "",
              "href": "/access_tokens/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/access_token/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/access_token/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "name",
                          "can_access_cda",
                          "can_access_cda_preview",
                          "can_access_cma"
                        ],
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/name"
                          },
                          "can_access_cda": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cda"
                          },
                          "can_access_cda_preview": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cda_preview"
                          },
                          "can_access_cma": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cma"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "role"
                        ],
                        "properties": {
                          "role": {
                            "$ref": "#/definitions/access_token/definitions/relationships/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/access_token"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all access tokens",
              "description": "",
              "href": "/access_tokens",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/access_token"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a access tokens",
              "description": "",
              "href": "/access_tokens/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/access_token"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "regenerate_token",
              "title": "Request a new API token",
              "description": "",
              "private": true,
              "href": "/access_tokens/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}/regenerate_token",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/access_token"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete an access token",
              "description": "",
              "href": "/access_tokens/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/access_token"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "API token",
          "description": "An API token allows access to our API. It is linked to a Role, which describes what actions can be performed.",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/access_token/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/access_token/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/access_token/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^access_token$",
              "example": "access_token"
            },
            "id": {
              "description": "ID of access_token",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "hardcoded_type",
                "can_access_cda",
                "can_access_cda_preview",
                "can_access_cma"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of access token",
                  "example": "Read-only API token"
                },
                "token": {
                  "type": "string",
                  "description": "The actual API token",
                  "example": "XXXXXXXXXXXXXXX"
                },
                "can_access_cda": {
                  "type": "boolean",
                  "description": "Whether this access token can access the Content Delivery API published content endpoint",
                  "example": true
                },
                "can_access_cda_preview": {
                  "type": "boolean",
                  "description": "Whether this access token can access the Content Delivery API draft content endpoint",
                  "example": true
                },
                "can_access_cma": {
                  "type": "boolean",
                  "description": "Whether this access token can access the Content Management API",
                  "example": true
                },
                "hardcoded_type": {
                  "type": [
                    "null",
                    "string"
                  ]
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "role"
              ],
              "additionalProperties": false,
              "properties": {
                "role": {
                  "type": "object",
                  "description": "Role",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/role/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/access_token/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/access_token/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/access_token/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/access_token/definitions/relationships"
            }
          }
        },
        "upload": {
          "position": 9,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new upload",
              "description": "**Important!** We strongly recommend to use our JS or Ruby client to upload new assets, as they provide super-handy helper methods that will take care of all the nitty-gritty details for you!\n\nIf you cannot use one of our clients and you need to manually contact our API, please keep on reading! :)\n\n##### A three-steps process\n\nTo manually create a new asset you will need to perform three separate steps:\n\n1. Send a `POST` request to the `/upload-requests` endpoint, to retrieve an AWS pre-signed URL;\n2. Use the obtained URL to perform a `PUT` request directly to AWS, uploading the raw content of the file as the request body;\n3. Make a `POST` request to the `/uploads` endpoint with the path being the ID of the upload request made on step 1.\n\nThis three-steps process helps DatoCMS making the uploading process extremely fast, as we don't need to be a middleman between you (the user that wants to upload an asset) and AWS.\n\n##### Response can be an asyncronous job!\n\nSince you (or the API client you're using) are in charge of performing the upload to AWS S3, something might go slightly wrong. For example, you can forget to set a proper `Content-Type` header in the `PUT` request. In this case, some browsers might refuse to load it. Ouch. \n\nIf we detect in the `POST /uploads` step that the uploaded image needs to be fixed is some way, we'll do that ourselves. But it might take some time to complete the operation (ie. we might have to move an image that's 60MB!), and can't have a CMA request hanging around for such long periods of time!\n\nSo in these cases, the `POST /uploads` will not return the upload, but an asynchronous job ID. You can then check the status of the job calling the `GET /job-results/:id` endpoint. While the job is in progress, the status code will be 404. Once completed the status of the request will be 200, and you'll get the result of the original operation inside the payload.\n\nTake a look at the following examples to better understand the workflow, and don't hesitate contacting our support if you need more info!\n\n\n\n\n",
              "examples": {
                "http": [
                  {
                    "title": "Step 1: Request an upload permission",
                    "request": {
                      "method": "POST",
                      "url": "https://site-api.datocms.com/upload-requests",
                      "body": "{\n  \"data\": {\n    \"type\": \"upload_request\",\n    \"attributes\": {\n      \"filename\": \"image.png\"\n    }\n  }\n}\n"
                    },
                    "response": {
                      "statusCode": 200,
                      "statusText": "OK",
                      "body": "{\n  \"data\": {\n    \"type\": \"upload_request\",\n    \"id\": \"/7/1455102967-image.png\",\n    \"attributes\": {\n      \"url\": \"https://dato-images.s3.eu-west-1.amazonaws.com/205/1565776891-image.png?x-amz-acl=public-read&...\"\n    }\n  }\n}\n"
                    }
                  },
                  {
                    "title": "Step 2: Upload file to S3",
                    "request": {
                      "method": "PUT",
                      "url": "https://dato-images.s3.eu-west-1.amazonaws.com/205/1565776891-image.png?x-amz-acl=public-read&...",
                      "headers": {},
                      "body": "<YOUR_FILE_BINARY_CONTENT>"
                    },
                    "response": {
                      "statusCode": 200,
                      "statusText": "OK",
                      "headers": {
                        "x-amz-request-id": "XXX",
                        "Server": "AmazonS3"
                      },
                      "body": ""
                    }
                  },
                  {
                    "title": "Step 3: Create the actual upload (and get back the newly created upload)",
                    "request": {
                      "method": "POST",
                      "url": "https://site-api.datocms.com/uploads",
                      "body": "{\n  \"data\": {\n    \"type\": \"upload\",\n    \"attributes\": {\n      \"path\": \"/205/1565776891-image.png\",\n      \"author\": \"Mark\",\n      \"copyright\": \"2020 DatoCMS\",\n      \"default_field_metadata\": {\n        \"en\": {\n          \"alt\": \"Nyan the cat\",\n          \"title\": \"My cat\",\n          \"custom_data\": {}\n        }\n      }\n    }\n  }\n}\n"
                    },
                    "response": {
                      "statusCode": 200,
                      "statusText": "OK",
                      "body": "{\n  \"data\": {\n    \"type\": \"upload\",\n    \"id\": \"666\",\n    \"attributes\": {\n      \"size\": 444,\n      \"width\": 30,\n      \"height\": 30,\n      \"path\": \"/205/1565776891-image.png\",\n      \"url\": \"https://www.datocms-assets.com/205/1565776891-image.png\",\n      \"basename\": \"image\",\n      \"format\": \"jpg\",\n      \"alt\": \"Nyan the cat\",\n      \"title\": \"My cat\",\n      \"is_image\": true,\n      \"author\": \"Mark\",\n      \"copyright\": \"2020 DatoCMS\",\n      \"default_field_metadata\": {\n        \"en\": {\n          \"alt\": \"Nyan the cat\",\n          \"title\": \"My cat\",\n          \"custom_data\": {}\n        }\n      }\n    }\n  }\n}\n"
                    }
                  },
                  {
                    "title": "Step 3: Response might be an asyncronous job!",
                    "request": {
                      "method": "POST",
                      "url": "https://site-api.datocms.com/uploads",
                      "body": "{\n  \"data\": {\n    \"type\": \"upload\",\n    \"attributes\": {\n      \"path\": \"/205/1565776891-image.png\",\n      \"author\": \"Mark\",\n      \"copyright\": \"2020 DatoCMS\",\n      \"default_field_metadata\": {\n        \"en\": {\n          \"alt\": \"Nyan the cat\",\n          \"title\": \"My cat\",\n          \"custom_data\": {}\n        }\n      }\n    }\n  }\n}\n"
                    },
                    "response": {
                      "statusCode": 200,
                      "statusText": "OK",
                      "body": "{\n  \"data\": {\n    \"type\": \"job\",\n    \"id\": \"facf9248be977002c9bae231\"\n  }\n}\n"
                    }
                  },
                  {
                    "title": "Step 4: Retrieve the job result",
                    "request": {
                      "method": "GET",
                      "url": "https://site-api.datocms.com/job-results/facf9248be977002c9bae231",
                      "body": ""
                    },
                    "response": {
                      "statusCode": 200,
                      "statusText": "OK",
                      "body": "{\n  \"data\": {\n    \"type\": \"job-result\",\n    \"id\": \"facf9248be977002c9bae231\",\n    \"attributes\": {\n      \"status\": 200,\n      \"payload\": {\n        \"data\": {\n          \"type\": \"upload\",\n          \"id\": \"666\",\n          \"attributes\": {\n            \"size\": 444,\n            \"width\": 30,\n            \"height\": 30,\n            \"path\": \"/205/1565776891-image.png\",\n            \"url\": \"https://www.datocms-assets.com/205/1565776891-image.png\",\n            \"basename\": \"image\",\n            \"format\": \"jpg\",\n            \"alt\": \"Nyan the cat\",\n            \"title\": \"My cat\",\n            \"is_image\": true,\n            \"author\": \"Mark\",\n            \"copyright\": \"2020 DatoCMS\",\n            \"default_field_metadata\": {\n              \"en\": {\n                \"alt\": \"Nyan the cat\",\n                \"title\": \"My cat\",\n                \"custom_data\": {}\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
                    }
                  }
                ],
                "js": [
                  {
                    "title": "Create an upload",
                    "request": "const { SiteClient } = require('datocms-client').SiteClient;\nconst client = new SiteClient('YOUR-API-KEY');\n\n// upload file using URL:\nconst path = await client.createUploadPath('http://i.giphy.com/NXOF5rlaSXdAc.gif');\n\n// ...or using local files:\nconst path = await client.createUploadPath('./image.png');\n\n// you can then use the returned path to create a new upload:\n\nconst upload = await client.uploads.create({\n  path,\n  author: 'New author!',\n  copyright: 'New copyright',\n  defaultFieldMetadata: {\n    en: {\n      alt: 'New default alt',\n      title: 'New default title',\n      customData: {\n        watermark: true,\n      }\n    }\n  }\n});\n\nconsole.log(upload);\n",
                    "response": "{\n  id: \"4124\",\n  size: 444,\n  width: 30,\n  height: 30,\n  path: \"/45/1496845848-image.png\",\n  basename: \"image\",\n  url: \"https://www.datocms-assets.com/45/1496845848-image.png\",\n  format: \"jpg\",\n  author: \"New author!\",\n  copyright: \"New copyright\",\n  notes: null,\n  defaultFieldMetadata: {\n    en: {\n      alt: \"new default alt\",\n      title: \"new default title\",\n      customData: {\n        watermark: true\n      }\n    }\n  },\n  isImage: true,\n  tags: []\n}\n"
                  }
                ],
                "ruby": [
                  {
                    "title": "Create an upload",
                    "request": "# frozen_string_literal: true\n\nrequire \"dato\"\nclient = Dato::Site::Client.new(\"YOUR-API-KEY\")\n\n# upload using URL:\n\npath = client.create_upload_path(\"http://i.giphy.com/NXOF5rlaSXdAc.gif\")\n\n# ...or using local files:\n\npath = client.create_upload_path(\"./image.png\")\n\n# you can then use the returned path to create a new upload:\n\nupload = client.uploads.create(\n  path: path,\n  author: \"New author!\",\n  copyright: \"New copyright\",\n  default_field_metadata: {\n    en: {\n      alt: \"New default alt\",\n      title: \"New default title\",\n      custom_data: {\n        watermark: true,\n      },\n    },\n  },\n)\n\nputs upload.inspect\n",
                    "response": "# frozen_string_literal: true\n\n{\n  id: \"4124\",\n  size: 444,\n  width: 30,\n  height: 30,\n  path: \"/45/1496845848-image.png\",\n  basename: \"image\",\n  url: \"https://www.datocms-assets.com/45/1496845848-image.png\",\n  format: \"jpg\",\n  author: \"New author!\",\n  copyright: \"New copyright\",\n  notes: null,\n  default_field_metadata: {\n    en: {\n      alt: \"new default alt\",\n      title: \"new default title\",\n      custom_data: {\n        watermark: true,\n      },\n    },\n  },\n  is_image: true,\n  tags: [],\n}\n"
                  }
                ]
              },
              "href": "/uploads",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/upload/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "path"
                        ],
                        "properties": {
                          "size": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/size"
                          },
                          "width": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/width"
                          },
                          "height": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/height"
                          },
                          "path": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/path"
                          },
                          "format": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/format"
                          },
                          "copyright": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/copyright"
                          },
                          "author": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/author"
                          },
                          "notes": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/notes"
                          },
                          "default_field_metadata": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/default_field_metadata"
                          },
                          "tags": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/tags"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/upload"
                      },
                      {
                        "$ref": "#/definitions/job"
                      }
                    ]
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all uploads",
              "description": "",
              "href": "/uploads",
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "filter[type]": {
                    "description": "Type of upload",
                    "enum": [
                      "file",
                      "image",
                      "video",
                      "not_used",
                      "other"
                    ],
                    "type": [
                      "string"
                    ],
                    "example": "image"
                  },
                  "filter[query]": {
                    "description": "Textual query to match",
                    "example": "foobar",
                    "type": [
                      "string"
                    ]
                  },
                  "sort[direction]": {
                    "description": "Ordering direction by upload date",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": [
                      "string"
                    ],
                    "example": "desc"
                  },
                  "page[offset]": {
                    "description": "Index of first record to fetch",
                    "example": 2,
                    "default": 1,
                    "type": [
                      "integer"
                    ]
                  },
                  "page[limit]": {
                    "description": "Number of records to fetch",
                    "example": 15,
                    "default": 30,
                    "type": [
                      "integer"
                    ]
                  }
                }
              },
              "hrefSchema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "filter[type]": {
                    "description": "Type of upload",
                    "enum": [
                      "file",
                      "image",
                      "video",
                      "not_used",
                      "other"
                    ],
                    "type": [
                      "string"
                    ],
                    "example": "image"
                  },
                  "filter[query]": {
                    "description": "Textual query to match",
                    "example": "foobar",
                    "type": [
                      "string"
                    ]
                  },
                  "sort[direction]": {
                    "description": "Ordering direction by upload date",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": [
                      "string"
                    ],
                    "example": "desc"
                  },
                  "page[offset]": {
                    "description": "Index of first record to fetch",
                    "example": 2,
                    "default": 1,
                    "type": [
                      "integer"
                    ]
                  },
                  "page[limit]": {
                    "description": "Number of records to fetch",
                    "example": 15,
                    "default": 30,
                    "type": [
                      "integer"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/upload"
                    }
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "total_count"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "total_count": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a upload",
              "description": "",
              "href": "/uploads/{(%2Fschemata%2Fupload%23%2Fdefinitions%2Fupload%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a upload",
              "description": "",
              "href": "/uploads/{(%2Fschemata%2Fupload%23%2Fdefinitions%2Fupload%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "batch_destroy",
              "title": "Delete multiple uploads",
              "description": "",
              "private": true,
              "href": "/uploads",
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "filter[ids]": {
                    "description": "IDs to fetch, comma separated",
                    "example": "42,86",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array"
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "deleted",
                      "in_use"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "deleted": {
                        "type": "integer"
                      },
                      "in_use": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a upload",
              "href": "/uploads/{(%2Fschemata%2Fupload%23%2Fdefinitions%2Fupload%2Fdefinitions%2Fidentity)}",
              "description": "Depending on the attributes you pass, you can use this endpoint to:\n\n* **Update regular attributes** like `author`, `notes`, `copyright`, `default_field_metadata`, etc.;\n* **Rename the asset**, passing a different `basename` attribute;\n* **Upload a new version of the asset**, passing a different `path` attribute;\n\nJust like `POST /uploads` endpoint, we might return an asyncronous job ID instead of the regular response. See the [Create a new upload](https://www.datocms.com/docs/content-management-api/resources/upload#create) section for more details.\n\n**Important!** We strongly recommend to use our JS or Ruby client to update existing assets, as they provide a super-handy `uploadFile` helper method that will take care of all the nitty-gritty details for you!\n",
              "examples": {
                "http": [
                  {
                    "title": "Change asset's attributes",
                    "request": {
                      "method": "POST",
                      "url": "https://site-api.datocms.com/uploads/4124",
                      "body": "{\n  \"data\": {\n    \"id\": \"4124\",\n    \"type\": \"upload\",\n    \"attributes\": {\n      \"author\": \"Mark\",\n      \"copyright\": \"2020 DatoCMS\",\n      \"default_field_metadata\": {\n        \"en\": {\n          \"alt\": \"Nyan the cat\",\n          \"title\": \"My cat\",\n          \"custom_data\": {}\n        }\n      }\n    }\n  }\n}\n"
                    },
                    "response": {
                      "statusCode": 200,
                      "statusText": "OK",
                      "body": "{\n  \"data\": {\n    \"type\": \"upload\",\n    \"id\": \"666\",\n    \"attributes\": {\n      \"size\": 444,\n      \"width\": 30,\n      \"height\": 30,\n      \"path\": \"/205/1565776891-image.png\",\n      \"url\": \"https://www.datocms-assets.com/205/1565776891-image.png\",\n      \"basename\": \"image\",\n      \"format\": \"jpg\",\n      \"alt\": \"Nyan the cat\",\n      \"title\": \"My cat\",\n      \"is_image\": true,\n      \"author\": \"Mark\",\n      \"copyright\": \"2020 DatoCMS\",\n      \"default_field_metadata\": {\n        \"en\": {\n          \"alt\": \"Nyan the cat\",\n          \"title\": \"My cat\",\n          \"custom_data\": {}\n        }\n      }\n    }\n  }\n}\n"
                    }
                  },
                  {
                    "title": "Renaming the asset",
                    "request": {
                      "method": "POST",
                      "url": "https://site-api.datocms.com/uploads/4124",
                      "body": "{\n  \"data\": {\n    \"id\": \"4124\",\n    \"type\": \"upload\",\n    \"attributes\": {\n      \"basename\": \"this-is-the-new-file-name\"\n    }\n  }\n}\n"
                    },
                    "response": {
                      "statusCode": 200,
                      "statusText": "OK",
                      "body": "{\n  \"data\": {\n    \"type\": \"job\",\n    \"id\": \"facf9248be977002c9bae231\"\n  }\n}\n"
                    }
                  },
                  {
                    "title": "Step 4: Retrieve the job result",
                    "request": {
                      "method": "GET",
                      "url": "https://site-api.datocms.com/job-results/facf9248be977002c9bae231",
                      "body": ""
                    },
                    "response": {
                      "statusCode": 200,
                      "statusText": "OK",
                      "body": "{\n  \"data\": {\n    \"type\": \"job-result\",\n    \"id\": \"facf9248be977002c9bae231\",\n    \"attributes\": {\n      \"status\": 200,\n      \"payload\": {\n        \"data\": {\n          \"type\": \"upload\",\n          \"id\": \"666\",\n          \"attributes\": {\n            \"size\": 444,\n            \"width\": 30,\n            \"height\": 30,\n            \"path\": \"/205/1565776891-image.png\",\n            \"url\": \"https://www.datocms-assets.com/205/1565776891-image.png\",\n            \"basename\": \"image\",\n            \"format\": \"jpg\",\n            \"alt\": \"Nyan the cat\",\n            \"title\": \"My cat\",\n            \"is_image\": true,\n            \"author\": \"Mark\",\n            \"copyright\": \"2020 DatoCMS\",\n            \"default_field_metadata\": {\n              \"en\": {\n                \"alt\": \"Nyan the cat\",\n                \"title\": \"My cat\",\n                \"custom_data\": {}\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
                    }
                  }
                ],
                "js": [
                  {
                    "title": "Update/rename assets",
                    "request": "const { SiteClient } = require('datocms-client').SiteClient;\nconst client = new SiteClient('YOUR-API-KEY');\n\n// let's say we have this upload\n\nconst upload = await client.uploads.find('4124')\n\n// we can either update its regular attributes:\n\nawait client.uploads.update(\n  upload.id,\n  {\n    author: 'New author!',\n    copyright: 'New copyright',\n    defaultFieldMetadata: {\n      en: {\n        alt: 'new default alt',\n        title: 'new default title',\n        customData: {},\n      },\n    },\n  }\n);\n\n// or replace its file\n\nawait client.uploads.update(\n  upload.id,\n  {\n    path: (await client.createUploadPath('./image.jpg')),\n  }\n)\n\n// or rename the file (for SEO purposes)\n\nconst updatedUpload = await client.uploads.update(\n  upload.id,\n  {\n    basename: 'this-will-be-the-new-file-basename',\n  }\n)\n\nconsole.log(updatedUpload)\n",
                    "response": "{\n  id: \"4124\",\n  size: 444,\n  width: 30,\n  height: 30,\n  path: \"/45/1496845848-this-will-be-the-new-file-basename.jpg\",\n  basename: \"digital-cats\",\n  url: \"https://www.datocms-assets.com/45/1496845848-this-will-be-the-new-file-basename.jpg\",\n  format: \"jpg\",\n  author: \"New author!\",\n  copyright: \"New copyright\",\n  notes: \"Nyan the cat\",\n  defaultFieldMetadata: {\n    en: {\n      alt: \"new default alt\",\n      title: \"new default title\",\n      customData: {}\n    }\n  },\n  isImage: true,\n  tags: [ \"cats\" ]\n}\n"
                  }
                ],
                "ruby": [
                  {
                    "title": "Update/rename assets",
                    "request": "# frozen_string_literal: true\n\nrequire \"dato\"\nclient = Dato::Site::Client.new(\"YOUR-API-KEY\")\n\n# let's say we have this upload\n\nupload = client.uploads.find(\"4124\")\n\n# we can either update its regular attributes:\n\nclient.uploads.update(\n  upload.id,\n  author: \"New author!\",\n  copyright: \"New copyright\",\n  default_field_metadata: {\n    en: {\n      alt: \"new default alt\",\n      title: \"new default title\",\n      custom_data: {},\n    },\n  },\n)\n\n# or replace its file\n\nclient.uploads.update(\n  upload.id,\n  path: client.create_upload_path(\"./image.jpg\"),\n)\n\n# or rename the file (for SEO purposes)\n\nupdated_upload = client.uploads.update(\n  upload.id,\n  basename: \"this-will-be-the-new-file-basename\",\n)\n\nputs updated_upload.inspect\n",
                    "response": "# frozen_string_literal: true\n\n{\n  id: \"4124\",\n  size: 444,\n  width: 30,\n  height: 30,\n  path: \"/45/1496845848-this-will-be-the-new-file-basename.jpg\",\n  basename: \"digital-cats\",\n  url: \"https://www.datocms-assets.com/45/1496845848-this-will-be-the-new-file-basename.jpg\",\n  format: \"jpg\",\n  author: \"New author!\",\n  copyright: \"New copyright\",\n  notes: \"Nyan the cat\",\n  default_field_metadata: {\n    en: {\n      alt: \"new default alt\",\n      title: \"new default title\",\n      custom_data: {},\n    },\n  },\n  is_image: true,\n  tags: [\"cats\"],\n}\n"
                  }
                ]
              },
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/upload/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/upload/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "path": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/path"
                          },
                          "basename": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/basename"
                          },
                          "size": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/size"
                          },
                          "width": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/width"
                          },
                          "height": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/height"
                          },
                          "format": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/format"
                          },
                          "copyright": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/copyright"
                          },
                          "author": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/author"
                          },
                          "notes": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/notes"
                          },
                          "tags": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/tags"
                          },
                          "default_field_metadata": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/default_field_metadata"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/upload"
                      },
                      {
                        "$ref": "#/definitions/job"
                      }
                    ]
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "batch_add_tags",
              "title": "Batch adding tags to an upload",
              "description": "",
              "href": "/uploads/batch-add-tags",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/upload/properties/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "tags": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/tags"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/upload"
                    }
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "updated",
                      "failed"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "updated": {
                        "type": "integer"
                      },
                      "failed": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Upload",
          "description": "Every file you upload to DatoCMS will be retrievable from this endpoint.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/upload/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/upload/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/upload/properties/id"
            },
            "type": {
              "description": "JSON API type upload",
              "type": [
                "string"
              ],
              "pattern": "^upload$",
              "example": "upload"
            },
            "id": {
              "description": "ID of upload",
              "type": "string",
              "example": "666"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "size",
                "path",
                "url",
                "format"
              ],
              "additionalProperties": false,
              "properties": {
                "size": {
                  "type": "integer",
                  "description": "size of the upload",
                  "example": 444
                },
                "width": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Width of image",
                  "example": 30
                },
                "height": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Height of image",
                  "example": 30
                },
                "path": {
                  "type": "string",
                  "description": "Upload path",
                  "example": "/45/1496845848-digital-cats.jpg"
                },
                "basename": {
                  "type": "string",
                  "description": "Upload basename",
                  "example": "digital-cats"
                },
                "filename": {
                  "type": "string",
                  "description": "Upload filename",
                  "example": "digital-cats.jpg"
                },
                "url": {
                  "type": "string",
                  "description": "Upload URL",
                  "example": "https://www.datocms-assets.com/45/1496845848-digital-cats.jpg"
                },
                "format": {
                  "type": "string",
                  "description": "Format",
                  "example": "jpg"
                },
                "author": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Author",
                  "example": "Mark Smith"
                },
                "copyright": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Copyright",
                  "example": "2020 DatoCMS"
                },
                "notes": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Notes",
                  "example": "Nyan the cat"
                },
                "duration": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "description": "Seconds of duration for the video",
                  "example": 62
                },
                "frame_rate": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "description": "Frame rate (FPS) for the video",
                  "example": 30
                },
                "blurhash": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Blurhash for the asset",
                  "example": "LEHV6nWB2yk8pyo0adR*.7kCMdnj"
                },
                "mux_asset_id": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Mux asset ID",
                  "example": "a1B2c3D4e5"
                },
                "mux_playback_id": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Public Mux playback ID. Used with stream.mux.com to create the source URL for a video player.",
                  "example": "a1B2c3D4e5F6g7H8i9"
                },
                "mux_mp4_highest_res": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    null,
                    "high",
                    "medium",
                    "low"
                  ],
                  "description": "Maximum quality of MP4 rendition available",
                  "example": "high"
                },
                "default_field_metadata": {
                  "type": "object",
                  "description": "Metadata to apply to fields",
                  "example": {
                    "en": {
                      "title": "this is the default title",
                      "alt": "this is the default alternate text",
                      "custom_data": {
                        "foo": "bar"
                      }
                    }
                  }
                },
                "is_image": {
                  "type": "boolean",
                  "description": "Is this upload an image?",
                  "example": true
                },
                "created_at": {
                  "description": "Date of upload",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "updated_at": {
                  "description": "Date of last update",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "mime_type": {
                  "description": "Mime type of upload",
                  "type": [
                    "null",
                    "string"
                  ],
                  "example": "image/jpeg"
                },
                "tags": {
                  "type": [
                    "array"
                  ],
                  "description": "Tags",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "cats"
                  ]
                },
                "smart_tags": {
                  "type": [
                    "array"
                  ],
                  "description": "Smart tags",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "robot-cats"
                  ]
                },
                "exif_info": {
                  "type": "object",
                  "description": "Exif",
                  "example": {
                    "iso": 10000,
                    "model": "ILCE-7",
                    "flash_mode": 16,
                    "focal_length": 35,
                    "exposure_time": 0.0166667
                  }
                },
                "colors": {
                  "type": [
                    "array"
                  ],
                  "description": "Dominant colors of the image",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "#f90a70",
                    "#9abdd1",
                    "#4b8e50"
                  ]
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "site"
              ],
              "additionalProperties": false,
              "properties": {
                "site": {
                  "type": "object",
                  "description": "Field item type",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/site/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/upload/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/upload/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/upload/definitions/attributes"
            }
          }
        },
        "plugin": {
          "position": 10,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new plugin",
              "description": "",
              "href": "/plugins",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/plugin/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/name"
                          },
                          "description": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/description"
                          },
                          "url": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/url"
                          },
                          "field_types": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/field_types"
                          },
                          "parameter_definitions": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/parameter_definitions"
                          },
                          "plugin_type": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/plugin_type"
                          },
                          "package_name": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/package_name"
                          },
                          "package_version": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/package_version"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/plugin"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a plugin",
              "description": "",
              "href": "/plugins/{(%2Fschemata%2Fplugin%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/plugin/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/plugin/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "parameters"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/name"
                          },
                          "description": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/description"
                          },
                          "url": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/url"
                          },
                          "parameters": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/parameters"
                          },
                          "package_version": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/package_version"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/plugin"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all plugins",
              "description": "",
              "href": "/plugins",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/plugin"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a plugins",
              "description": "",
              "href": "/plugins/{(%2Fschemata%2Fplugin%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/plugin"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a plugin",
              "description": "",
              "href": "/plugins/{(%2Fschemata%2Fplugin%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/plugin"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Plugin",
          "description": "Plugins enable developers to replace DatoCMS field components with HTML5 applications so the editing experiences of the DatoCMS web app can be customized.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/plugin/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/plugin/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/plugin/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^plugin$",
              "example": "plugin"
            },
            "id": {
              "description": "ID of plugin",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "field_types",
                "url",
                "parameters",
                "parameter_definitions",
                "plugin_type"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the plugin",
                  "example": "5 stars"
                },
                "description": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "description": "A textual description for the plugin",
                  "example": "A simple field editor that allows a nicer editing rating experience"
                },
                "package_name": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "description": "Plugin Npm package name",
                  "example": "datocms-plugin-star-rating-editor"
                },
                "package_version": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "description": "Plugin Npm version",
                  "example": "0.0.4"
                },
                "plugin_type": {
                  "type": "string",
                  "description": "The type of extension",
                  "enum": [
                    "field_editor",
                    "sidebar",
                    "field_addon"
                  ],
                  "example": "field"
                },
                "field_types": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "boolean",
                      "date",
                      "date_time",
                      "float",
                      "integer",
                      "string",
                      "text",
                      "lat_lon",
                      "json",
                      "seo",
                      "link",
                      "links",
                      "video",
                      "color",
                      "slug",
                      "rich_text"
                    ]
                  },
                  "description": "On which types of field this plugin can be used",
                  "example": [
                    "integer",
                    "float"
                  ]
                },
                "url": {
                  "type": "string",
                  "description": "The name of the plugin",
                  "example": "https://cdn.rawgit.com/datocms/extensions/master/samples/five-stars/extension.js"
                },
                "parameters": {
                  "type": "object",
                  "description": "Global parameters which are set on on a project level. Values apply globally to every instance of an plugin within the project.",
                  "keepOriginalCaseOnKeys": true,
                  "example": {
                    "devMode": true
                  }
                },
                "parameter_definitions": {
                  "type": "object",
                  "description": "Parameter definitions for the plugin",
                  "required": [
                    "global",
                    "instance"
                  ],
                  "additionalProperties": false,
                  "keepOriginalCaseOnKeys": true,
                  "properties": {
                    "global": {
                      "type": "array"
                    },
                    "instance": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "global": [
                      {
                        "id": "devMode",
                        "type": "boolean",
                        "label": "Run in development mode"
                      }
                    ],
                    "instance": [
                      {
                        "id": "halfStars",
                        "type": "boolean",
                        "label": "Allow half stars ratings?",
                        "default": false,
                        "hint": "If enabled, rate using whole stars, if enabled, it doesn't use half-steps"
                      },
                      {
                        "id": "totalStars",
                        "type": "integer",
                        "label": "Amount of stars to show",
                        "default": 5,
                        "hint": ""
                      }
                    ]
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/plugin/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/plugin/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/plugin/definitions/attributes"
            }
          }
        },
        "subscription_compatibility": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Subscription compatibility",
          "description": "",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/subscription_compatibility/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/subscription_compatibility/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/subscription_compatibility/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^subscription_compatibility$",
              "example": "subscription_compatibility"
            },
            "id": {
              "description": "ID of subscription compatibility",
              "type": "string",
              "example": "4235"
            },
            "analysis": {
              "type": "object",
              "description": "Analysis",
              "properties": {
                "current_usage": {
                  "type": [
                    "boolean",
                    "integer"
                  ]
                },
                "plan_limit": {
                  "type": [
                    "boolean",
                    "integer"
                  ]
                },
                "compatible": {
                  "type": "boolean"
                },
                "compatible_with_extra_charges": {
                  "type": "boolean"
                }
              }
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "limits",
                "compatible",
                "compatible_with_extra_charges",
                "incompatible_limits",
                "users_analysis",
                "roles_analysis",
                "item_types_analysis",
                "locales_analysis",
                "indexable_pages_analysis",
                "version_history_analysis",
                "items_analysis",
                "uploadable_bytes_analysis",
                "custom_domain_analysis",
                "otp_analysis"
              ],
              "additionalProperties": false,
              "properties": {
                "limits": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "incompatible_limits": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "compatible": {
                  "type": "boolean"
                },
                "compatible_with_extra_charges": {
                  "type": "boolean"
                },
                "users_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "roles_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "item_types_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "locales_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "indexable_pages_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "version_history_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "items_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "uploadable_bytes_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "custom_domain_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "otp_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "sso_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "item_locking_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "advanced_media_area_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "video": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "plan"
              ],
              "additionalProperties": false,
              "properties": {
                "plan": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/plan/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/subscription_compatibility/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/subscription_compatibility/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/subscription_compatibility/definitions/attributes"
            }
          }
        },
        "plan": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Plan",
          "description": "A field represents a plan",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/plan/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/plan/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/plan/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^plan$",
              "example": "plan"
            },
            "id": {
              "description": "ID of plan",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the plan",
                  "example": "Basic"
                },
                "active": {
                  "type": "boolean",
                  "description": "Whether this plan is active or legacy",
                  "example": true
                },
                "custom_domain": {
                  "type": "boolean",
                  "description": "Whether custom domain can be enabled or not",
                  "example": true
                },
                "users": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of users that can be invited",
                  "example": 2
                },
                "indexable_pages": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of indexable pages",
                  "example": 1000
                },
                "deployment_environments": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of deployment environments",
                  "example": 4
                },
                "plugins": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of plugins",
                  "example": 4
                },
                "items": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of records allowed",
                  "example": 5000
                },
                "monthly_price": {
                  "type": "integer",
                  "description": "Monthly price",
                  "example": 19
                },
                "yearly_price": {
                  "type": "integer",
                  "description": "Yearly price",
                  "example": 189
                },
                "uploadable_bytes": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Uploadable bytes",
                  "example": 1073741824
                },
                "traffic_bytes": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Amount of asset data transferred between our Asset CDN and GraphQL Content Delivery API and content consumers",
                  "example": 1073741824
                },
                "api_calls": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "The number of requests made to both our Content Management and Content Delivery APIs",
                  "example": 100000
                },
                "mux_streaming_seconds": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "The number of streaming seconds delivered by Mux.com",
                  "example": 3600
                },
                "mux_encoding_seconds": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "The number of available encoding seconds to Mux.com",
                  "example": 3600
                },
                "access_tokens": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "The number of different API tokens you can generate, each which different permissions",
                  "example": 10
                },
                "roles": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of roles allowed",
                  "example": 10
                },
                "locales": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of locales allowed",
                  "example": 10
                },
                "item_types": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of models allowed",
                  "example": 25
                },
                "item_locking": {
                  "type": "boolean",
                  "description": "Whether collaboration features are enabled or not",
                  "example": true
                },
                "sso": {
                  "type": "boolean",
                  "description": "Whether Single Sign-On feature is enabled or not",
                  "example": true
                },
                "advanced_media_area": {
                  "type": "boolean",
                  "description": "Whether built-in image editor and smart-tagging is enabled or not",
                  "example": true
                },
                "video": {
                  "type": "boolean",
                  "description": "Whether video streaming with Mux.com is enabled or not",
                  "example": true
                },
                "history_retention_months": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "description": "Months of version history retention",
                  "example": 3
                },
                "version_history": {
                  "type": "boolean",
                  "description": "Whether version history can be enabled or not",
                  "example": true
                },
                "otp": {
                  "type": "boolean",
                  "description": "Whether two-factor authentication can be enabled or not",
                  "example": true
                },
                "extra_packets": {
                  "type": "object",
                  "description": "Available extra packets",
                  "additionalProperties": false,
                  "properties": {
                    "users": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "locales": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "item_types": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "roles": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "deployment_environments": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "access_tokens": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "mux_encoding_seconds": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "users": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "locales": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "item_types": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "roles": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "deployment_environments": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "access_tokens": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "mux_encoding_seconds": {
                      "amount_per_packet": 1000,
                      "price": 10
                    }
                  }
                },
                "auto_packets": {
                  "type": "object",
                  "description": "Automatic packets",
                  "additionalProperties": false,
                  "properties": {
                    "traffic_bytes": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "api_calls": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "mux_streaming_seconds": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "api_calls": {
                      "amount_per_packet": 250000,
                      "price": 9
                    },
                    "traffic_bytes": {
                      "amount_per_packet": 161061273600,
                      "price": 29
                    },
                    "mux_streaming_seconds": {
                      "amount_per_packet": 250000,
                      "price": 29
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/plan/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/plan/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/plan/definitions/attributes"
            }
          }
        },
        "scheduled_publication": {
          "position": 15,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new scheduled publication",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/scheduled_publication",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/scheduled_publication/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/scheduled_publication/definitions/attributes"
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/scheduled_publication"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item"
                    }
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a scheduled publication",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/scheduled_publication",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/scheduled_publication"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Scheduled publication",
          "description": "You can create scheduled publication to publish records in the future",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/scheduled_publication/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/scheduled_publication/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/scheduled_publication/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^scheduled_publication$",
              "example": "scheduled_publication$"
            },
            "id": {
              "description": "ID of scheduled_publication",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "publication_scheduled_at": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time",
                  "description": "The future date for the publication",
                  "example": "2017-02-10T11:03:42.208Z"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "item"
              ],
              "additionalProperties": false,
              "properties": {
                "item": {
                  "type": "object",
                  "description": "Item",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/item/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/scheduled_publication/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/scheduled_publication/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/scheduled_publication/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/scheduled_publication/definitions/relationships"
            }
          }
        },
        "webhook": {
          "position": 11,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new webhook",
              "description": "",
              "href": "/webhooks",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/webhook/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "name",
                          "url",
                          "headers",
                          "events",
                          "custom_payload",
                          "http_basic_user",
                          "http_basic_password"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/name"
                          },
                          "url": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/url"
                          },
                          "custom_payload": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/custom_payload"
                          },
                          "headers": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/headers"
                          },
                          "events": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/events"
                          },
                          "http_basic_user": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/http_basic_user"
                          },
                          "http_basic_password": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/http_basic_password"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/webhook"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a webhook",
              "description": "",
              "href": "/webhooks/{(%2Fschemata%2Fwebhook%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/webhook/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/webhook/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/name"
                          },
                          "url": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/url"
                          },
                          "custom_payload": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/custom_payload"
                          },
                          "headers": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/headers"
                          },
                          "events": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/events"
                          },
                          "http_basic_user": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/http_basic_user"
                          },
                          "http_basic_password": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/http_basic_password"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/webhook"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all webhooks",
              "description": "",
              "href": "/webhooks",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/webhook"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a webhook",
              "description": "",
              "href": "/webhooks/{(%2Fschemata%2Fwebhook%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/webhook"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a webhook",
              "description": "",
              "href": "/webhooks/{(%2Fschemata%2Fwebhook%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/webhook"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Webhook",
          "description": "A webhook allows to make requests following certain Dato events. It is linked to a Role, which describes what actions can be performed.",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/webhook/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/webhook/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/webhook/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^webhook$",
              "example": "webhook"
            },
            "id": {
              "description": "ID of webhook",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "url",
                "headers",
                "events",
                "http_basic_user",
                "http_basic_password"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Unique name for the webhook",
                  "example": "Item type creation/update"
                },
                "url": {
                  "type": "string",
                  "description": "The URL to be called",
                  "example": "https://www.example.com/webhook"
                },
                "custom_payload": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "A custom payload",
                  "example": "{ message: 'Successfully published record!' }"
                },
                "http_basic_user": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "HTTP Basic Authorization username",
                  "example": "user"
                },
                "http_basic_password": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "HTTP Basic Authorization password",
                  "example": "password"
                },
                "headers": {
                  "type": "object",
                  "description": "Additional headers that will be sent",
                  "example": {
                    "X-Foo": "Bar"
                  }
                },
                "events": {
                  "type": "array",
                  "description": "All the events you will be notified for",
                  "example": [
                    {
                      "entity_type": "item_type",
                      "event_types": [
                        "update",
                        "create"
                      ],
                      "filter": {
                        "entity_type": "item_type",
                        "entity_ids": [
                          "42",
                          "43"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/webhook/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/webhook/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/webhook/definitions/attributes"
            }
          }
        },
        "webhook_call": {
          "position": 12,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all webhooks calls",
              "description": "",
              "href": "/webhooks/calls",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/webhook_call"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "resend_webhook",
              "title": "Resends the webhook with the same parameters",
              "description": "",
              "private": true,
              "href": "/webhooks/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}/resend_webhook",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/webhook_call"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Webhook call",
          "description": "Represents a log entry in the webhooks activity list.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/webhook_call/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/webhook_call/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/webhook_call/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^webhook_call$",
              "example": "webhook_call"
            },
            "id": {
              "description": "ID of webhook call",
              "type": "string",
              "example": "42"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "entity_type",
                "event_type",
                "created_at",
                "request_url",
                "request_headers",
                "request_payload",
                "response_status",
                "response_headers",
                "response_payload"
              ],
              "additionalProperties": false,
              "properties": {
                "entity_type": {
                  "type": "string",
                  "enum": [
                    "item",
                    "item_type",
                    "upload"
                  ],
                  "description": "The subject of webhook triggering",
                  "example": "item"
                },
                "event_type": {
                  "type": "string",
                  "enum": [
                    "create",
                    "update",
                    "delete",
                    "publish",
                    "unpublish"
                  ],
                  "description": "The event that triggers the webhook call",
                  "example": "update"
                },
                "created_at": {
                  "description": "The moment the call occurred",
                  "type": [
                    "string"
                  ],
                  "format": "date-time",
                  "example": "2016-09-20T18:50:24.914Z"
                },
                "request_url": {
                  "description": "The url that the webhook called",
                  "type": "string",
                  "example": "https://www.example.com/webhook"
                },
                "request_headers": {
                  "type": "object",
                  "description": "The request's headers",
                  "example": {
                    "Accept": "*/*",
                    "User-Agent": "DatoCMS (datocms.com)",
                    "Authorization": "Basic Y2lhbzptaWFv",
                    "Content-Type": "application/json"
                  }
                },
                "request_payload": {
                  "type": "string",
                  "description": "The body of the request",
                  "example": "{ \"entity_type\": \"item\", \"event_type\": \"update\", \"entity\": { \"id\": \"293467\", \"type\": \"item\", \"attributes\": { \"created_at\": \"2018-05-22T10:13:00.461Z\", \"updated_at\": \"2018-07-30T14:13:50.068Z\", \"is_valid\": true, \"avatar\": { \"path\": \"/205/1526984443-untitled-drawing.png\", \"format\": \"png\", \"size\": 242630, \"alt\": null, \"title\": null, \"width\": 329, \"height\": 286 }, \"name\": \"3Francesco Falchy\", \"gallery\": [] }, \"relationships\": { \"item_type\": { \"data\": { \"id\": \"1423\", \"type\": \"item_type\" } }, \"published_version\": { \"data\": { \"id\": \"670532\", \"type\": \"item_version\" } }, \"current_version\": { \"data\": { \"id\": \"670532\", \"type\": \"item_version\" } } } } }"
                },
                "response_status": {
                  "description": "The status of the response",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "example": 200
                },
                "response_headers": {
                  "type": "object",
                  "description": "The response's headers",
                  "example": {
                    "via": "1.1 vegur, 1.1 37c0945d19329fccc23efb283d01aa06.cloudfront.net (CloudFront)",
                    "date": "Fri, 27 Jul 2018 11:59:20 GMT",
                    "server": "gunicorn/19.6.0"
                  }
                },
                "response_payload": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The body of the response",
                  "example": "ok"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "webhook"
              ],
              "additionalProperties": false,
              "properties": {
                "webhook": {
                  "type": "object",
                  "description": "The webhook which has been called",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/webhook/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/webhook_call/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/webhook_call/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/webhook_call/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/webhook_call/definitions/relationships"
            }
          }
        },
        "deployment_environment": {
          "position": 13,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all deployment environments for a site",
              "description": "",
              "href": "/deployment-environments",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/deployment_environment"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a deployment environment",
              "description": "",
              "href": "/deployment-environments/{(%2Fschemata%2Fdeployment_environment%23%2Fdefinitions%2Fdeployment_environment%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/deployment_environment"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "create",
              "title": "Create deployment environment",
              "description": "",
              "href": "/deployment-environments",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/deployment_environment/properties/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "name",
                          "deploy_adapter",
                          "spider_enabled",
                          "frontend_url",
                          "deploy_settings",
                          "build_on_scheduled_publications"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/name"
                          },
                          "webhook_token": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/webhook_token"
                          },
                          "deploy_adapter": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/deploy_adapter"
                          },
                          "spider_enabled": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/spider_enabled"
                          },
                          "frontend_url": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/frontend_url"
                          },
                          "build_on_scheduled_publications": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/build_on_scheduled_publications"
                          },
                          "deploy_settings": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/deploy_settings"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/deployment_environment"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update deployment environment",
              "description": "",
              "href": "/deployment-environments/{(%2Fschemata%2Fdeployment_environment%23%2Fdefinitions%2Fdeployment_environment%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/deployment_environment/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/deployment_environment/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/name"
                          },
                          "deploy_adapter": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/deploy_adapter"
                          },
                          "spider_enabled": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/spider_enabled"
                          },
                          "frontend_url": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/frontend_url"
                          },
                          "build_on_scheduled_publications": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/build_on_scheduled_publications"
                          },
                          "deploy_settings": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/deploy_settings"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/deployment_environment"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "trigger",
              "title": "Trigger a deploy",
              "description": "",
              "href": "/deployment-environments/{(%2Fschemata%2Fdeployment_environment%23%2Fdefinitions%2Fdeployment_environment%2Fdefinitions%2Fidentity)}/trigger"
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a deployment environment",
              "description": "",
              "href": "/deployment-environments/{(%2Fschemata%2Fdeployment_environment%23%2Fdefinitions%2Fdeployment_environment%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/deployment_environment"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Deployment environment",
          "description": "Configuration for different deployment environments. You can have different staging and production environments in order to test your site before final deploy",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/deployment_environment/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/deployment_environment/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/deployment_environment/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^deployment_environment$",
              "example": "deployment_environment"
            },
            "id": {
              "description": "ID of deployment_environment",
              "type": "string",
              "example": "1822"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "deploy_adapter",
                "deploy_settings",
                "last_deploy_at",
                "last_build_at",
                "deploy_status",
                "webhook_url",
                "scrape_status",
                "frontend_url",
                "spider_enabled",
                "build_on_scheduled_publications"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the environment",
                  "example": "Production"
                },
                "deploy_adapter": {
                  "type": "string",
                  "description": "The deploy adapter",
                  "example": "netlify"
                },
                "deploy_settings": {
                  "type": "object",
                  "description": "Additional configuration for deploy",
                  "example": {
                    "trigger_url": "https://api.netlify.com/build_hooks/XXX",
                    "site_id": "XXX",
                    "access_token": "YYY",
                    "branch": "master"
                  }
                },
                "last_build_at": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Timestamp of the last build",
                  "example": "2017-03-30T09:29:14.872Z"
                },
                "last_deploy_at": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Timestamp of the last deploy",
                  "example": "2017-03-30T09:29:14.872Z"
                },
                "deploy_status": {
                  "type": "string",
                  "description": "Status of last deploy",
                  "example": "success"
                },
                "webhook_token": {
                  "type": "string",
                  "description": "Unique token of the webhook",
                  "example": "xA1239ajsk123"
                },
                "webhook_url": {
                  "type": "string",
                  "description": "Notification webhook URL",
                  "example": "https://webhooks.datocoms.com/xA1239ajsk123/deploy-results"
                },
                "scrape_status": {
                  "type": "string",
                  "description": "Status of site scraper",
                  "example": "success"
                },
                "frontend_url": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Public url of the site",
                  "example": "https://www.mywebsite.com/"
                },
                "build_on_scheduled_publications": {
                  "type": "boolean",
                  "description": "Deploy on scheduled publication",
                  "example": true
                },
                "spider_enabled": {
                  "type": "boolean",
                  "description": "Enable scraper on the site",
                  "example": true
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/deployment_environment/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/deployment_environment/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/deployment_environment/definitions/attributes"
            }
          }
        },
        "item_type_filter": {
          "position": 14,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new filter",
              "description": "",
              "href": "/item-type-filters",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item_type_filter/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/item_type_filter/definitions/attributes"
                      },
                      "relationships": {
                        "$ref": "#/definitions/item_type_filter/definitions/relationships"
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type_filter"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a filter",
              "description": "",
              "href": "/item-type-filters/{(%2Fschemata%2Fitem_type_filter%23%2Fdefinitions%2Fitem_type_filter%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item_type_filter/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/item_type_filter/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "description": "JSON API attributes",
                        "required": [
                          "name",
                          "filter"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/item_type_filter/definitions/attributes/properties/name"
                          },
                          "filter": {
                            "$ref": "#/definitions/item_type_filter/definitions/attributes/properties/filter"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type_filter"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all filters",
              "description": "",
              "href": "/item-type-filters",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type_filter"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a filter",
              "description": "",
              "href": "/item-type-filters/{(%2Fschemata%2Fitem_type_filter%23%2Fdefinitions%2Fitem_type_filter%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type_filter"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a filter",
              "description": "",
              "href": "/item-type-filters/{(%2Fschemata%2Fitem_type_filter%23%2Fdefinitions%2Fitem_type_filter%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type_filter"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Model filter",
          "description": "In DatoCMS you can create filters to help you (and other editors) quickly search for records",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/item_type_filter/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/item_type_filter/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/item_type_filter/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^item_type_filter$",
              "example": "item_type_filter"
            },
            "id": {
              "description": "ID of filter",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "filter"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the filter",
                  "example": "Draft posts"
                },
                "filter": {
                  "type": "object",
                  "description": "The actual filter",
                  "example": {
                    "status": {
                      "eq": "draft"
                    }
                  }
                },
                "shared": {
                  "type": "boolean",
                  "description": "Whether it's a shared filter or not",
                  "example": true
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "item_type"
              ],
              "additionalProperties": false,
              "properties": {
                "item_type": {
                  "type": "object",
                  "description": "Model associated with the filter",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/item_type/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/item_type_filter/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/item_type_filter/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/item_type_filter/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/item_type_filter/definitions/relationships"
            }
          }
        },
        "job": {
          "position": 15,
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Asyncronous job",
          "description": "",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/job/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/job/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/job/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^job$",
              "example": "job"
            },
            "id": {
              "description": "ID of job",
              "type": "string",
              "example": "4235"
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/job/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/job/definitions/id"
            }
          }
        },
        "site_invitation": {
          "position": 16,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Invite a new user",
              "description": "",
              "href": "/site-invitations",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/site_invitation/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "email"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "email": {
                            "$ref": "#/definitions/site_invitation/definitions/attributes/properties/email"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "role"
                        ],
                        "properties": {
                          "role": {
                            "$ref": "#/definitions/site_invitation/definitions/relationships/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site_invitation"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update an invitation",
              "description": "",
              "href": "/site-invitations/{(%2Fschemata%2Fsite_invitation%23%2Fdefinitions%2Fsite_invitation%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/site_invitation/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/site_invitation/properties/id"
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "role": {
                            "$ref": "#/definitions/site_invitation/definitions/relationships/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site_invitation"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all invitations",
              "description": "",
              "href": "/site-invitations",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/site_invitation"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve an invitation",
              "description": "",
              "href": "/site-invitations/{(%2Fschemata%2Fsite_invitation%23%2Fdefinitions%2Fsite_invitation%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site_invitation"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete an invitation",
              "description": "",
              "href": "/site-invitations/{(%2Fschemata%2Fsite_invitation%23%2Fdefinitions%2Fsite_invitation%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site_invitation"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Invitation",
          "description": "A DatoCMS administrative area can be accessed by multiple people. Every invitation is linked to a specific Role, which describes what actions it will be able to perform once the user will register.",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/site_invitation/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/site_invitation/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/site_invitation/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^site_invitation$",
              "example": "site_invitation"
            },
            "id": {
              "description": "ID of invitation",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "email"
              ],
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email",
                  "example": "mark.smith@example.com"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "role"
              ],
              "additionalProperties": false,
              "properties": {
                "role": {
                  "type": "object",
                  "description": "Role",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/role/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/site_invitation/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/site_invitation/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/site_invitation/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/site_invitation/definitions/relationships"
            }
          }
        },
        "editing_session": {
          "position": 17,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all editing sessions",
              "private": true,
              "description": "",
              "href": "/editing-sessions",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/editing_session"
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Allows all actions on editing sessions",
              "description": "",
              "private": true,
              "href": "/editing-sessions/{(%2Fschemata%2Fediting_session%23%2Fdefinitions%2Fediting_session%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "anyOf": [
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "relationships"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type",
                            "pattern": "^editing_session_enter_item$",
                            "example": "editing_session_enter_item"
                          },
                          "relationships": {
                            "description": "JSON API relationships",
                            "type": "object",
                            "required": [
                              "item"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "item": {
                                "$ref": "#/definitions/editing_session/definitions/relationships/properties/active_item"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "relationships"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type",
                            "pattern": "^editing_session_take_over_item$",
                            "example": "editing_session_take_over_item"
                          },
                          "relationships": {
                            "description": "JSON API relationships",
                            "type": "object",
                            "required": [
                              "item"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "item": {
                                "$ref": "#/definitions/editing_session/definitions/relationships/properties/active_item"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "relationships"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type",
                            "pattern": "^editing_session_lock_item$",
                            "example": "editing_session_lock_item"
                          },
                          "relationships": {
                            "description": "JSON API relationships",
                            "type": "object",
                            "required": [
                              "item"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "item": {
                                "$ref": "#/definitions/editing_session/definitions/relationships/properties/active_item"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type",
                            "pattern": "^editing_session_unlock_item$",
                            "example": "editing_session_unlock_item"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/editing_session"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete an editing session",
              "description": "",
              "private": true,
              "href": "/editing-sessions/{(%2Fschemata%2Fediting_session%23%2Fdefinitions%2Fediting_session%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/editing_session"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Editing session",
          "description": "Session track users movements in the administrative area, and allows locking a record when editing it.",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/editing_session/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/editing_session/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/editing_session/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^editing_session$",
              "example": "editing_session"
            },
            "id": {
              "description": "UUID of presence",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "last_activity_at": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "User entered at",
                  "example": "2019-03-30T09:29:14.872Z"
                },
                "locked_at": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "User locked record at",
                  "example": "2019-03-30T09:29:14.872Z"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "editor"
              ],
              "additionalProperties": false,
              "properties": {
                "active_item": {
                  "type": "object",
                  "description": "The active item in the session",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/item/definitions/data"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "active_item_type": {
                  "type": "object",
                  "description": "The item type of the active item in the session",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/item_type/definitions/data"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "editor": {
                  "description": "The entity (account/editor/access token) who has accessed the record",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/account/definitions/data"
                        },
                        {
                          "$ref": "#/definitions/access_token/definitions/data"
                        },
                        {
                          "$ref": "#/definitions/user/definitions/data"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/editing_session/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/editing_session/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/editing_session/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/editing_session/definitions/relationships"
            }
          }
        },
        "sso_settings": {
          "position": 18,
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve SSO Settings",
              "description": "",
              "href": "/sso-settings",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/sso_settings"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update SSO Settings",
              "description": "",
              "href": "/sso-settings",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/sso_settings/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/sso_settings/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "idp_saml_metadata_url"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "idp_saml_metadata_url": {
                            "$ref": "#/definitions/sso_settings/definitions/attributes/properties/idp_saml_metadata_url"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "default_role"
                        ],
                        "properties": {
                          "default_role": {
                            "$ref": "#/definitions/sso_settings/definitions/relationships/properties/default_role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/sso_settings"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "SSO Settings",
          "description": "Represents the Single Sign-on settings of the current DatoCMS project",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/sso_settings/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/sso_settings/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/sso_settings/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^sso_settings$",
              "example": "sso_settings"
            },
            "id": {
              "description": "ID",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "idp_saml_metadata_url"
              ],
              "additionalProperties": false,
              "properties": {
                "idp_saml_metadata_url": {
                  "type": "string",
                  "description": "URL of Identity Provider SAML Metadata endpoint",
                  "example": "https://my-org.oktapreview.com/app/XXXX/sso/saml/metadata"
                },
                "saml_token": {
                  "type": "string",
                  "description": "DatoCMS SAML Token",
                  "example": "a2a24ae5fbb2d955b1b4fa73f2dd58"
                },
                "scim_api_token": {
                  "type": "string",
                  "description": "Security token required by Identity Providers",
                  "example": "3d32bde700a93a79088db34a0xxx60"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "default_role": {
                  "type": "object",
                  "description": "The default role assigned to SSO users that do not belong to any SSO group",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/role/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/sso_settings/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/sso_settings/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/sso_settings/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/sso_settings/definitions/relationships"
            }
          }
        },
        "sso_user": {
          "position": 19,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all users",
              "description": "",
              "href": "/sso-users",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/sso_user"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "sync_sso_users",
              "title": "Copy editors as SSO users",
              "description": "Copy existing users into SSO users",
              "required": [
                "data"
              ],
              "href": "/sso-users/sync-users",
              "targetSchema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/sso_user"
                    }
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a SSO user",
              "description": "",
              "href": "/sso-users/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/sso_user"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Single Sign-On user",
          "description": "A Single Sign-On user exists when a DatoCMS project is connected to an external Identity Provider. An SSO user will not use the standard login procedure but has to go through SAML authentication. It can also be linked to one or more IdP groups.",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/sso_user/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/sso_user/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/sso_user/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^sso_user$",
              "example": "sso_user"
            },
            "id": {
              "description": "ID of user",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "username"
              ],
              "additionalProperties": false,
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Email",
                  "example": "mark.smith@example.com"
                },
                "external_id": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Identity provider ID",
                  "example": "Ja23ekjhsad"
                },
                "is_active": {
                  "type": "boolean",
                  "description": "Whether this user is active on the identity provider. De-activated users won't be able to login."
                },
                "first_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "First name",
                  "example": "Mark"
                },
                "last_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Last name",
                  "example": "Smith"
                },
                "emails": {
                  "type": "array",
                  "description": "SCIM-formatted emails",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "value",
                      "primary"
                    ],
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "primary": {
                        "type": "boolean"
                      }
                    }
                  },
                  "example": [
                    {
                      "type": "work",
                      "value": "m.smith@datocms.com",
                      "primary": true
                    }
                  ]
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "groups": {
                  "type": "object",
                  "description": "All the users's groups",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/sso_group/definitions/data"
                      }
                    }
                  }
                },
                "role": {
                  "type": "object",
                  "description": "The user role",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/role/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/sso_user/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/sso_user/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/sso_user/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/sso_user/definitions/relationships"
            }
          }
        },
        "sso_group": {
          "position": 20,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all SSO groups",
              "description": "",
              "href": "/sso-groups",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/sso_group"
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a SSO group",
              "description": "",
              "href": "/sso-groups/{(%2Fschemata%2Fsso_group%23%2Fdefinitions%2Fsso_group%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/sso_group/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/sso_group/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "priority"
                        ],
                        "properties": {
                          "priority": {
                            "$ref": "#/definitions/sso_group/definitions/attributes/properties/priority"
                          }
                        }
                      },
                      "relationships": {
                        "$ref": "#/definitions/sso_group/properties/relationships"
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/sso_group"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a group",
              "description": "",
              "href": "/sso-groups/{(%2Fschemata%2Fsso_group%23%2Fdefinitions%2Fsso_group%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/sso_group"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Single Sign-On group",
          "description": "A Single Sign-On group exists when a DatoCMS project is connected to an Identity Provider. These groups can be used to link DatoCMS roles to the Identity Provider's groups.",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/sso_group/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/sso_group/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/sso_group/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^sso_group$",
              "example": "sso_group"
            },
            "id": {
              "description": "ID of group",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the group",
                  "example": "Admin"
                },
                "priority": {
                  "type": "integer",
                  "description": "When an user belongs to multiple groups, the role associated to the group with the highest priority will be used",
                  "example": 1
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "role": {
                  "type": "object",
                  "description": "Sso Group's role",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/role/definitions/data"
                    }
                  }
                },
                "users": {
                  "type": "object",
                  "description": "Group members",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/sso_user/definitions/data"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/sso_group/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/sso_group/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/sso_group/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/sso_group/definitions/relationships"
            }
          }
        },
        "job_result": {
          "position": 21,
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a job result",
              "description": "",
              "href": "/job-results/{(%2Fschemata%2Fjob_result%23%2Fdefinitions%2Fjob_result%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job_result"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Job result",
          "description": "Some API endpoint give results asyncronously, returning the ID of a job",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/job_result/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/job_result/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/job_result/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^job_result$",
              "example": "job_result"
            },
            "id": {
              "description": "ID of job result",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "status",
                "payload"
              ],
              "additionalProperties": false,
              "properties": {
                "status": {
                  "type": "integer",
                  "description": "Status of delayed HTTP response",
                  "example": 200
                },
                "payload": {
                  "type": [
                    "null",
                    "object"
                  ],
                  "description": "JSON API response of the HTTP request",
                  "example": {
                    "data": {
                      "id": 999,
                      "type": "item_type",
                      "attributes": {
                        "some": "attributes"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/job_result/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/job_result/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/job_result/definitions/attributes"
            }
          }
        },
        "upload_tag": {
          "position": 22,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all sites upload tags",
              "description": "",
              "href": "/upload-tags",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/upload_tag"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new upload tag",
              "description": "",
              "href": "/upload-tags",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/upload_tag/properties/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/upload_tag/definitions/attributes/properties/name"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload_tag"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Site upload tags",
          "description": "All the site's upload tags",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/upload_tag/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/upload_tag/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/upload_tag/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^upload_tag$",
              "example": "upload_tag"
            },
            "id": {
              "description": "ID of upload tag",
              "type": "string",
              "example": "42"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The tag name",
                  "example": "Pictures of me"
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/upload_tag/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/upload_tag/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/upload_tag/definitions/attributes"
            }
          }
        },
        "upload_smart_tag": {
          "position": 23,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all site dinamically generated tags",
              "description": "",
              "href": "/upload-smart-tags",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/upload_smart_tag"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Site upload smart tags",
          "description": "All the site's upload dinamically generated tags",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/upload_smart_tag/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/upload_smart_tag/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/upload_smart_tag/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^upload_smart_tag$",
              "example": "upload_smart_tag"
            },
            "id": {
              "description": "ID of upload tag",
              "type": "string",
              "example": "42"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The tag name",
                  "example": "building"
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/upload_smart_tag/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/upload_smart_tag/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/upload_smart_tag/definitions/attributes"
            }
          }
        },
        "upload_filter": {
          "position": 24,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new filter",
              "description": "",
              "href": "/upload-filters",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/upload_filter/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/upload_filter/definitions/attributes"
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload_filter"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a filter",
              "description": "",
              "href": "/upload-filters/{(%2Fschemata%2Fupload_filter%23%2Fdefinitions%2Fupload_filter%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/upload_filter/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/upload_filter/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "description": "JSON API attributes",
                        "required": [
                          "name",
                          "filter"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/upload_filter/definitions/attributes/properties/name"
                          },
                          "filter": {
                            "$ref": "#/definitions/upload_filter/definitions/attributes/properties/filter"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload_filter"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all filters",
              "description": "",
              "href": "/upload-filters",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/upload_filter"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a filter",
              "description": "",
              "href": "/upload-filters/{(%2Fschemata%2Fupload_filter%23%2Fdefinitions%2Fupload_filter%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload_filter"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a filter",
              "description": "",
              "href": "/upload-filters/{(%2Fschemata%2Fupload_filter%23%2Fdefinitions%2Fupload_filter%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload_filter"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Uploads filter",
          "description": "In DatoCMS you can create filters to help you (and other editors) quickly search for uploads",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/upload_filter/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/upload_filter/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/upload_filter/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^upload_filter$",
              "example": "upload_filter"
            },
            "id": {
              "description": "ID of filter",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "filter"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the filter",
                  "example": "Draft posts"
                },
                "filter": {
                  "type": "object",
                  "description": "The actual filter",
                  "example": {
                    "status": {
                      "eq": "draft"
                    }
                  }
                },
                "shared": {
                  "type": "boolean",
                  "description": "Whether it's a shared filter or not",
                  "example": true
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/upload_filter/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/upload_filter/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/upload_filter/definitions/attributes"
            }
          }
        }
      }
    },
    "rawHeaders": [
      "Last-Modified",
      "Fri, 20 Mar 2020 10:30:38 GMT",
      "Content-Type",
      "application/json",
      "Content-Length",
      "338698",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Server",
      "WEBrick/1.4.2 (Ruby/2.5.1/2018-03-29)",
      "Date",
      "Fri, 20 Mar 2020 10:51:50 GMT",
      "Connection",
      "close"
    ],
    "responseIsBinary": false
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/upload-requests",
    "body": {
      "data": {
        "type": "upload_request",
        "attributes": {
          "filename": "men%C3%B9-estivo.png"
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b080046a0745e00038c50cb6ac33010fc17437baa1c49969c079862d20487525a48212597b2b6d68ec0af4a729326e4dfab409a730f2b9699d9d9d19e02050e82d929d02a9805232e84988e989c8831659251d2604b8a88e45382d6e9ef2eecdb2a7808dc4f8f5e3ff47507ead3e0d7e0698f837346e783437bf11c4ced453be77a3b1b8dfca6ce9a9ae8062ab4a18d421cc8decf11164203c7ae85bd0d8baef95f8ac70381e648a0a8937ec86b5d1083a0ee3f48ead1b4ae3aa3ddae49d2cd5a90ec259d93759672195f0573830a5ba7a14ed2e755ca378b37bedc8ad556ae397fcdeef892534e69c4a96f6f397d6f23fff8a0e2efd757c3277098fccdbc332a99a4db2bb738f4daa04da6945e91b5ae5a54990f8cc626bbee667321c00dc67b4d208f98c222f227005994793e15222f583c1947658c4a3081450928a92f891895b9a492c6638cc74c95c1f97cfe050000ffff03004383c9f4df010000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-Ratelimit-Limit",
      "60",
      "X-Ratelimit-Remaining",
      "58",
      "Etag",
      "W/\"8c5b657846731a615d258e380d6205a7\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "836954bf-da36-4845-b1a4-c21330115112",
      "X-Runtime",
      "0.058800",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Server",
      "WEBrick/1.4.2 (Ruby/2.5.1/2018-03-29)",
      "Date",
      "Fri, 20 Mar 2020 10:51:50 GMT",
      "Content-Length",
      "351",
      "Connection",
      "close"
    ],
    "responseIsBinary": false
  },
  {
    "scope": "https://datosrl-images.s3.eu-west-1.amazonaws.com:443",
    "method": "PUT",
    "path": "/24449/1584701510-men-c3-b9-estivo.png?x-amz-acl=public-read&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIA2WEP2FZ4IZ5S22OH%2F20200320%2Feu-west-1%2Fs3%2Faws4_request&X-Amz-Date=20200320T105150Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Signature=28ab31dec3151a5cfbb944bc16873f6ed414ecfae50ae55ee3fb505067e671df",
    "body": "",
    "status": 200,
    "response": "",
    "rawHeaders": [
      "x-amz-id-2",
      "uP2HSXb3fTzUHH4rOX5Hxw4fHwqWdOp4BxAvtXrfaPk49U6S5Sx+ZF38oVhSSmqjIxwrE68f0oU=",
      "x-amz-request-id",
      "7EA764391503FDD0",
      "Date",
      "Fri, 20 Mar 2020 10:51:51 GMT",
      "ETag",
      "\"68f117679a7d7f0d77a0de42774d0ae1\"",
      "Content-Length",
      "0",
      "Server",
      "AmazonS3",
      "Connection",
      "close"
    ],
    "responseIsBinary": false
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/uploads",
    "body": {
      "data": {
        "type": "upload",
        "attributes": {
          "path": "/24449/1584701510-men-c3-b9-estivo.png"
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b080049a0745e00039493cbaeda301086dfc5527749889d0b90edd9b65d54ac8a2a6b481ce2831d47be1428e2dd3b21045489239d6e22cdf89b4bfe99b990063c90ea4264432a42f36549b38c44c49f07818e3028030ddae0bd95bbe0851b6127ffe06b99d23c2247d9f88e54ac2823d209b9effcdd1860f49305cbf37cbda0c52a5fa6b4a069ac451fd759bc5bc7c279f9db2443bfc712adb11a30984c2604df194baa3e281591dedc4a4f466d86b39d2a4d8e46b41094e7ad14aae15a78987f4bf4e317d403f5d22bf148149c379adfe1ebf51a11e9b8d4b047c4db2010b102bc68f8ad3396b2344eb398a51b9a5605ad8a2c61b4f889ed86a1f91c6715029df783ab168be3f198609ca9b58bc139e15d521bfd69c93cec5194ed2f144f2ad1831e67f601bb03f71181afe2245b2efbd68c3a44444b2df87d076e722ca624b551c68e252fc40adc1896af22b2b7629499ae1856510163f202e7a7860ec65528aed19da6ebec49afd399a6abf56b3ca34f9c150f9c65aff1f4892fb39966ab97f0ff35be2c1e7059ce6cc9fe6171084e83f5fc39942658f0d2f4f3bab516f5e7e87b2ca00e273e2838efa03ef0f104273716b01db8f17cbeee7e5cccee1492cd97efa7f0be3dbcbd6f93cde1ed5b2d123225d043ce3b3c071c26b7f395e032ff050000ffff030092a0c790dd030000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-Ratelimit-Limit",
      "60",
      "X-Ratelimit-Remaining",
      "57",
      "Etag",
      "W/\"f9f8df6dceb04f176b0f820fa0fc6679\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "f70fc8d2-4983-4ba8-8cf9-ac7957432c2d",
      "X-Runtime",
      "2.294687",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Server",
      "WEBrick/1.4.2 (Ruby/2.5.1/2018-03-29)",
      "Date",
      "Fri, 20 Mar 2020 10:51:53 GMT",
      "Content-Length",
      "497",
      "Connection",
      "close"
    ],
    "responseIsBinary": false
  }
]